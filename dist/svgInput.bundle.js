!function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=2)}([function(t,e,i){"use strict";var s={DefaultCircleDiameter:2,DefaultInitialClusterType:"Random",ShowClusters:!0,ShowWalkers:!0,MaxWalkers:2e4,WalkerSource:"Random",ReplenishWalkers:!1,Stickiness:.9,BiasTowards:"Center",BiasForce:1,UseFrame:!0,FrameSize:900};const r=[];class n{constructor(){this._bvh_parent=null,this._bvh_branch=!0,this._bvh_left=null,this._bvh_right=null,this._bvh_sort=0,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}static getBranch(){return r.length?r.pop():new n}static releaseBranch(t){r.push(t)}static sortBranches(t,e){return t.sort>e.sort?-1:1}}class a{constructor(){this._hierarchy=null,this._bodies=[],this._dirty_branches=[]}insert(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=this,this._bodies.push(t)}const i=t._polygon,s=t.x,r=t.y;i&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords();const a=t._bvh_padding,o=i?0:t.radius*t.scale,h=(i?t._min_x:s-o)-a,l=(i?t._min_y:r-o)-a,c=(i?t._max_x:s+o)+a,_=(i?t._max_y:r+o)+a;t._bvh_min_x=h,t._bvh_min_y=l,t._bvh_max_x=c,t._bvh_max_y=_;let u=this._hierarchy,p=0;if(u)for(;;){if(!u._bvh_branch){const e=u._bvh_parent,i=u._bvh_min_x,s=u._bvh_min_y,r=u._bvh_max_x,a=u._bvh_max_y,o=u._bvh_parent=t._bvh_parent=n.getBranch();o._bvh_parent=e,o._bvh_left=u,o._bvh_right=t,o._bvh_sort=p++,o._bvh_min_x=h<i?h:i,o._bvh_min_y=l<s?l:s,o._bvh_max_x=c>r?c:r,o._bvh_max_y=_>a?_:a,e?e._bvh_left===u?e._bvh_left=o:e._bvh_right=o:this._hierarchy=o;break}{const t=u._bvh_left,e=t._bvh_min_y,i=t._bvh_max_x,s=t._bvh_max_y,r=h<t._bvh_min_x?h:t._bvh_min_x,n=l<e?l:e,a=c>i?c:i,o=_>s?_:s,m=(a-r)*(o-n)-(i-t._bvh_min_x)*(s-e),d=u._bvh_right,y=d._bvh_min_x,f=d._bvh_min_y,v=d._bvh_max_x,g=d._bvh_max_y,x=h<y?h:y,b=l<f?l:f,O=c>v?c:v,T=_>g?_:g,w=(O-x)*(T-b)-(v-y)*(g-f);u._bvh_sort=p++,u._bvh_min_x=r<x?r:x,u._bvh_min_y=n<b?n:b,u._bvh_max_x=a>O?a:O,u._bvh_max_y=o>T?o:T,u=m<=w?t:d}}else this._hierarchy=t}remove(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=null,this._bodies.splice(this._bodies.indexOf(t),1)}if(this._hierarchy===t)return void(this._hierarchy=null);const i=t._bvh_parent,s=i._bvh_parent,r=i._bvh_left,a=r===t?i._bvh_right:r;if(a._bvh_parent=s,a._bvh_branch&&(a._bvh_sort=i._bvh_sort),s){s._bvh_left===i?s._bvh_left=a:s._bvh_right=a;let t=s;for(;t;){const e=t._bvh_left,i=e._bvh_min_x,s=e._bvh_min_y,r=e._bvh_max_x,n=e._bvh_max_y,a=t._bvh_right,o=a._bvh_min_x,h=a._bvh_min_y,l=a._bvh_max_x,c=a._bvh_max_y;t._bvh_min_x=i<o?i:o,t._bvh_min_y=s<h?s:h,t._bvh_max_x=r>l?r:l,t._bvh_max_y=n>c?n:c,t=t._bvh_parent}}else this._hierarchy=a;n.releaseBranch(i)}update(){const t=this._bodies,e=t.length;for(let i=0;i<e;++i){const e=t[i];let s=!1;if(s||e.padding===e._bvh_padding||(e._bvh_padding=e.padding,s=!0),!s){const t=e._polygon;t&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords();const i=e.x,r=e.y,n=t?0:e.radius*e.scale,a=t?e._min_x:i-n,o=t?e._min_y:r-n,h=t?e._max_x:i+n,l=t?e._max_y:r+n;s=a<e._bvh_min_x||o<e._bvh_min_y||h>e._bvh_max_x||l>e._bvh_max_y}s&&(this.remove(e,!0),this.insert(e,!0))}}potentials(t){const e=[],i=t._bvh_min_x,s=t._bvh_min_y,r=t._bvh_max_x,n=t._bvh_max_y;let a=this._hierarchy,o=!0;if(!a||!a._bvh_branch)return e;for(;a;){if(o){o=!1;let t=a._bvh_branch?a._bvh_left:null;for(;t&&t._bvh_max_x>=i&&t._bvh_max_y>=s&&t._bvh_min_x<=r&&t._bvh_min_y<=n;)t=(a=t)._bvh_branch?a._bvh_left:null}const h=a._bvh_branch,l=h?a._bvh_right:null;if(l&&l._bvh_max_x>i&&l._bvh_max_y>s&&l._bvh_min_x<r&&l._bvh_min_y<n)a=l,o=!0;else{h||a===t||e.push(a);let i=a._bvh_parent;if(!i)break;for(;i&&i._bvh_right===a;)i=(a=i)._bvh_parent;a=i}}return e}draw(t){const e=this._bodies,i=e.length;for(let s=0;s<i;++s)e[s].draw(t)}drawBVH(t){let e=this._hierarchy,i=!0;for(;e;){if(i){i=!1;let t=e._bvh_branch?e._bvh_left:null;for(;t;)t=(e=t)._bvh_branch?e._bvh_left:null}const s=e._bvh_branch,r=e._bvh_min_x,n=e._bvh_min_y,a=e._bvh_max_x,o=e._bvh_max_y,h=s?e._bvh_right:null;if(t.moveTo(r,n),t.lineTo(a,n),t.lineTo(a,o),t.lineTo(r,o),t.lineTo(r,n),h)e=h,i=!0;else{let t=e._bvh_parent;if(!t)break;for(;t&&t._bvh_right===e;)t=(e=t)._bvh_parent;e=t}}}}class o{constructor(){this.collision=!1,this.a=null,this.b=null,this.a_in_b=!1,this.a_in_b=!1,this.overlap=0,this.overlap_x=0,this.overlap_y=0}}function h(t,e,i=null,s=!0){const r=t._polygon,n=e._polygon;let a=!1;return i&&(i.a=t,i.b=e,i.a_in_b=!0,i.b_in_a=!0,i.overlap=null,i.overlap_x=0,i.overlap_y=0),r&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords(),n&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords(),s&&!function(t,e){const i=t._polygon,s=i?0:t.x,r=i?0:t.y,n=i?0:t.radius*t.scale,a=i?t._min_x:s-n,o=i?t._min_y:r-n,h=i?t._max_x:s+n,l=i?t._max_y:r+n,c=e._polygon,_=c?0:e.x,u=c?0:e.y,p=c?0:e.radius*e.scale,m=c?e._min_x:_-p,d=c?e._min_y:u-p,y=c?e._max_x:_+p,f=c?e._max_y:u+p;return a<y&&o<f&&h>m&&l>d}(t,e)||(r&&t._dirty_normals&&t._calculateNormals(),n&&e._dirty_normals&&e._calculateNormals(),a=r&&n?function(t,e,i=null){const s=t._coords.length,r=e._coords.length;if(2===s&&2===r){const s=t._coords,r=e._coords;return i&&(i.overlap=0),s[0]===r[0]&&s[1]===r[1]}const n=t._coords,a=e._coords,o=t._normals,h=e._normals;if(s>2)for(let t=0,e=1;t<s;t+=2,e+=2)if(c(n,a,o[t],o[e],i))return!1;if(r>2)for(let t=0,e=1;t<r;t+=2,e+=2)if(c(n,a,h[t],h[e],i))return!1;return!0}(t,e,i):r?l(t,e,i,!1):n?l(e,t,i,!0):function(t,e,i=null){const s=t.radius*t.scale,r=e.radius*e.scale,n=e.x-t.x,a=e.y-t.y,o=s+r,h=n*n+a*a;if(h>o*o)return!1;if(i){const t=Math.sqrt(h);i.a_in_b=s<=r&&t<=r-s,i.b_in_a=r<=s&&t<=s-r,i.overlap=o-t,i.overlap_x=n/t,i.overlap_y=a/t}return!0}(t,e,i)),i&&(i.collision=a),a}function l(t,e,i=null,s=!1){const r=t._coords,n=t._edges,a=t._normals,o=e.x,h=e.y,l=e.radius*e.scale,c=2*l,_=l*l,u=r.length;let p=!0,m=!0,d=null,y=0,f=0;if(2===u){const t=o-r[0],e=h-r[1],s=t*t+e*e;if(s>_)return!1;if(i){const i=Math.sqrt(s);d=l-i,y=t/i,f=e/i,m=!1}}else for(let t=0,e=1;t<u;t+=2,e+=2){const s=o-r[t],v=h-r[e],g=n[t],x=n[e],b=s*g+v*x,O=b<0?-1:b>g*g+x*x?1:0;let T=!1,w=0,C=0,E=0;if(i&&p&&s*s+v*v>_&&(p=!1),O){const e=-1===O,a=e?0===t?u-2:t-2:t===u-2?0:t+2,c=a+1,p=o-r[a],d=h-r[c],y=n[a],f=n[c],g=p*y+d*f;if((g<0?-1:g>y*y+f*f?1:0)===-O){const t=e?s:p,r=e?v:d,n=t*t+r*r;if(n>_)return!1;if(i){const e=Math.sqrt(n);T=!0,w=l-e,C=t/e,E=r/e,m=!1}}}else{const r=a[t],n=a[e],o=s*r+v*n,h=o<0?-o:o;if(o>0&&h>l)return!1;i&&(T=!0,w=l-o,C=r,E=n,(m&&o>=0||w<c)&&(m=!1))}T&&(null===d||d>w)&&(d=w,y=C,f=E)}return i&&(i.a_in_b=s?m:p,i.b_in_a=s?p:m,i.overlap=d,i.overlap_x=s?-y:y,i.overlap_y=s?-f:f),!0}function c(t,e,i,s,r=null){const n=t.length,a=e.length;if(!n||!a)return!0;let o=null,h=null,l=null,c=null;for(let e=0,r=1;e<n;e+=2,r+=2){const n=t[e]*i+t[r]*s;(null===o||o>n)&&(o=n),(null===h||h<n)&&(h=n)}for(let t=0,r=1;t<a;t+=2,r+=2){const n=e[t]*i+e[r]*s;(null===l||l>n)&&(l=n),(null===c||c<n)&&(c=n)}if(o>c||h<l)return!0;if(r){let t=0;if(o<l)if(r.a_in_b=!1,h<c)t=h-l,r.b_in_a=!1;else{const e=h-l,i=c-o;t=e<i?e:-i}else if(r.b_in_a=!1,h>c)t=o-c,r.a_in_b=!1;else{const e=h-l,i=c-o;t=e<i?e:-i}const e=r.overlap,n=t<0?-t:t;if(null===e||e>n){const e=t<0?-1:1;r.overlap=n,r.overlap_x=i*e,r.overlap_y=s*e}}return!1}class _{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.padding=i,this._circle=!1,this._polygon=!1,this._point=!1,this._bvh=null,this._bvh_parent=null,this._bvh_branch=!1,this._bvh_padding=i,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}collides(t,e=null,i=!0){return h(this,t,e,i)}potentials(){const t=this._bvh;if(null===t)throw new Error("Body does not belong to a collision system");return t.potentials(this)}remove(){const t=this._bvh;t&&t.remove(this,!1)}createResult(){return new o}static createResult(){return new o}}class u extends _{constructor(t=0,e=0,i=0,s=1,r=0){super(t,e,r),this.radius=i,this.scale=s}draw(t){const e=this.x,i=this.y,s=this.radius*this.scale;t.moveTo(e+s,i),t.arc(e,i,s,0,2*Math.PI)}}class p extends _{constructor(t=0,e=0,i=[],s=0,r=1,n=1,a=0){super(t,e,a),this.angle=s,this.scale_x=r,this.scale_y=n,this._polygon=!0,this._x=t,this._y=e,this._angle=s,this._scale_x=r,this._scale_y=n,this._min_x=0,this._min_y=0,this._max_x=0,this._max_y=0,this._points=null,this._coords=null,this._edges=null,this._normals=null,this._dirty_coords=!0,this._dirty_normals=!0,p.prototype.setPoints.call(this,i)}draw(t){(this._dirty_coords||this.x!==this._x||this.y!==this._y||this.angle!==this._angle||this.scale_x!==this._scale_x||this.scale_y!==this._scale_y)&&this._calculateCoords();const e=this._coords;if(2===e.length)t.moveTo(e[0],e[1]),t.arc(e[0],e[1],1,0,2*Math.PI);else{t.moveTo(e[0],e[1]);for(let i=2;i<e.length;i+=2)t.lineTo(e[i],e[i+1]);e.length>4&&t.lineTo(e[0],e[1])}}setPoints(t){const e=t.length;this._points=new Float64Array(2*e),this._coords=new Float64Array(2*e),this._edges=new Float64Array(2*e),this._normals=new Float64Array(2*e);const i=this._points;for(let s=0,r=0,n=1;s<e;++s,r+=2,n+=2){const e=t[s];i[r]=e[0],i[n]=e[1]}this._dirty_coords=!0}_calculateCoords(){const t=this.x,e=this.y,i=this.angle,s=this.scale_x,r=this.scale_y,n=this._points,a=this._coords,o=n.length;let h,l,c,_;for(let u=0,p=1;u<o;u+=2,p+=2){let o=n[u]*s,m=n[p]*r;if(i){const t=Math.cos(i),e=Math.sin(i),s=o;o=s*t-m*e,m=s*e+m*t}o+=t,m+=e,a[u]=o,a[p]=m,0===u?(h=l=o,c=_=m):(o<h?h=o:o>l&&(l=o),m<c?c=m:m>_&&(_=m))}this._x=t,this._y=e,this._angle=i,this._scale_x=s,this._scale_y=r,this._min_x=h,this._min_y=c,this._max_x=l,this._max_y=_,this._dirty_coords=!1,this._dirty_normals=!0}_calculateNormals(){const t=this._coords,e=this._edges,i=this._normals,s=t.length;for(let r=0,n=1;r<s;r+=2,n+=2){const a=r+2<s?r+2:0,o=t[a]-t[r],h=t[a+1]-t[n],l=o||h?Math.sqrt(o*o+h*h):0;e[r]=o,e[n]=h,i[r]=l?h/l:0,i[n]=l?-o/l:0}this._dirty_normals=!1}}class m extends p{constructor(t=0,e=0,i=0){super(t,e,[[0,0]],0,1,1,i),this._point=!0}}m.prototype.setPoints=void 0;class d{constructor(){this._bvh=new a}createCircle(t=0,e=0,i=0,s=1,r=0){const n=new u(t,e,i,s,r);return this._bvh.insert(n),n}createPolygon(t=0,e=0,i=[[0,0]],s=0,r=1,n=1,a=0){const o=new p(t,e,i,s,r,n,a);return this._bvh.insert(o),o}createPoint(t=0,e=0,i=0){const s=new m(t,e,i);return this._bvh.insert(s),s}createResult(){return new o}static createResult(){return new o}insert(...t){for(const e of t)this._bvh.insert(e,!1);return this}remove(...t){for(const e of t)this._bvh.remove(e,!1);return this}update(){return this._bvh.update(),this}draw(t){return this._bvh.draw(t)}drawBVH(t){return this._bvh.drawBVH(t)}potentials(t){return this._bvh.potentials(t)}collides(t,e,i=null,s=!0){return h(t,e,i,s)}}i.d(e,"a",function(){return y});class y{constructor(t,e){this.p5=t,this.settings=Object.assign({},s,e),this.paused=!1,this.showWalkers=this.settings.ShowWalkers,this.showClusters=this.settings.ShowClusters,this.useFrame=this.settings.UseFrame,this.numWalkers=0,this.edgeMargin=this.settings.hasOwnProperty("EdgeMargin")?this.settings.EdgeMargin:0,this.edges={},this.frame={},"number"==typeof this.settings.FrameSize?(this.frame.left=window.innerWidth/2-this.settings.FrameSize/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize/2):"object"==typeof this.settings.FrameSize&&(this.frame.left=window.innerWidth/2-this.settings.FrameSize[0]/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize[0]/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize[1]/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize[1]/2),this.resetEdges(),this.maxDistance=this.p5.dist(this.edges.left,this.edges.top,window.innerWidth/2,window.innerHeight/2),this.system=new d,this.bodies=[],this.shapes=[]}iterate(){this.paused||(this.settings.ReplenishWalkers&&this.numWalkers<this.settings.MaxWalkers&&this.createDefaultWalkers(this.settings.MaxWalkers-this.numWalkers,this.settings.ReplenishmentSource),this.moveWalkers(),this.system.update(),this.handleCollisions())}draw(){this.p5.background(255);for(let t of this.shapes){this.p5.noFill(),this.p5.stroke(100),this.p5.beginShape();for(let e=0;e<t._coords.length;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}for(let t of this.bodies)if(t._point)this.p5.noFill(),t.stuck&&this.showClusters?(this.p5.noStroke(),this.p5.fill(200),this.p5.ellipse(t.x,t.y,5),this.p5.stroke(0)):!t.stuck&&this.showWalkers?this.p5.stroke(0):this.p5.noStroke(),this.p5.point(t.x,t.y);else if(t._circle)this.p5.noStroke(),t.stuck&&this.showClusters?this.p5.fill(120):!t.stuck&&this.showWalkers?this.p5.fill(230):this.p5.noFill(),this.p5.ellipse(t.x,t.y,2*t.radius);else if(t._polygon){this.p5.noStroke(),t.stuck&&this.showClusters?this.p5.fill(120):!t.stuck&&this.showWalkers?this.p5.fill(230):this.p5.noFill(),this.p5.beginShape();for(let e=0;e<t._coords.length-1;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}this.useFrame&&this.drawFrame()}drawFrame(){this.p5.noFill(),this.p5.stroke(0),"number"==typeof this.settings.FrameSize?this.p5.rect(window.innerWidth/2-this.settings.FrameSize/2-1,window.innerHeight/2-this.settings.FrameSize/2-1,this.settings.FrameSize+2,this.settings.FrameSize+2):"object"==typeof this.settings.FrameSize&&this.p5.rect(window.innerWidth/2-this.settings.FrameSize[0]/2-1,window.innerHeight/2-this.settings.FrameSize[1]/2-1,this.settings.FrameSize[0]+2,this.settings.FrameSize[1]+2)}resetEdges(){this.edges.left=this.useFrame?this.frame.left:0,this.edges.right=this.useFrame?this.frame.right:window.innerWidth,this.edges.top=this.useFrame?this.frame.top:0,this.edges.bottom=this.useFrame?this.frame.bottom:window.innerHeight}moveWalkers(){if(this.bodies.length>0)for(let t of this.bodies)if(!t.stuck){let e,i=this.p5.random(-1,1),s=this.p5.random(-1,1);switch(this.settings.BiasTowards){case"Top":s-=this.settings.BiasForce;break;case"Bottom":s+=this.settings.BiasForce;break;case"Left":i-=this.settings.BiasForce;break;case"Right":i+=this.settings.BiasForce;break;case"Center":i+=(e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2)).x,s+=e.y;break;case"Edges":i-=(e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2)).x,s-=e.y;break;case"Equator":t.y<window.innerHeight/2?s+=this.settings.BiasForce:s-=this.settings.BiasForce;break;case"Meridian":t.x<window.innerWidth/2?i+=this.settings.BiasForce:i-=this.settings.BiasForce}t._point&&(i=Math.round(i),s=Math.round(s)),t.x+i>this.edges.left&&t.x+i<this.edges.right&&(t.x+=i),t.y+s>this.edges.top&&t.y+s<this.edges.bottom&&(t.y+=s),t.age++}}getDeltasTowards(t,e,i,s){let r=Math.atan2(s-e,i-t);return{x:Math.cos(r)*this.settings.BiasForce,y:Math.sin(r)*this.settings.BiasForce}}handleCollisions(){for(let t of this.shapes){const e=t.potentials();for(let i of e)t.collides(i)&&(i.stuck=!0,this.numWalkers--)}for(let t of this.bodies){if(t.stuck)continue;const e=t.potentials();for(let i of e)t._point?i.stuck&&(t.stuck=!0,this.numWalkers--):i.stuck&&t.collides(i)&&(t.stuck=!0,this.numWalkers--)}}createParticle(t){if(void 0===t||"object"!=typeof t)return;let e;if(t.hasOwnProperty("type"))switch(t.type){case"Point":(e=this.system.createPoint(Math.round(t.x),Math.round(t.y)))._point=!0;break;case"Circle":default:(e=this.system.createCircle(t.x,t.y,t.diameter/2))._circle=!0;break;case"Polygon":(e=this.system.createPolygon(t.x,t.y,t.polygon,t.hasOwnProperty("rotation")?this.p5.radians(t.rotation):0))._polygon=!0}else{const i=this.settings.hasOwnProperty("CircleDiameter")?this.settings.CircleDiameter:this.settings.DefaultCircleDiameter,s=t.hasOwnProperty("diameter")?t.diameter:i;(e=this.system.createCircle(t.x,t.y,s/2))._circle=!0}e.stuck=!!t.hasOwnProperty("stuck")&&t.stuck,e.age=0,this.bodies.push(e)}createWalker(t){this.createParticle(t),this.numWalkers++}createDefaultWalkers(t=this.settings.MaxWalkers,e=this.settings.WalkerSource){for(let i=0;i<t;i++){let t={};switch(e){case"Edges":switch(Math.round(this.p5.random(1,4))){case 1:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.top+this.edgeMargin);break;case 3:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.bottom-this.edgeMargin,this.edges.bottom);break;case 4:t.x=this.p5.random(this.edges.left,this.edges.left+this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case 2:t.x=this.p5.random(this.edges.right-this.edgeMargin,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom)}break;case"Circle":let i=50,s=this.p5.random(360);t.x=window.innerWidth/2+i*Math.cos(s*Math.PI/180),t.y=window.innerHeight/2+i*Math.sin(s*Math.PI/180);break;case"Random":t.x=this.p5.random(this.edges.left,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case"Random-Circle":let r=this.p5.random(360),n=this.p5.random(5,430);t.x=window.innerWidth/2+n*Math.cos(r*Math.PI/180),t.y=window.innerHeight/2+n*Math.sin(r*Math.PI/180);break;case"Center":t.x=window.innerWidth/2,t.y=window.innerHeight/2}if(this.settings.VaryDiameterByDistance){let e=this.p5.dist(t.x,t.y,window.innerWidth/2,window.innerHeight/2);t.diameter=this.p5.map(e,0,this.maxDistance,this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1])}this.createWalker(t)}}createDefaultClusters(t=this.settings.DefaultInitialClusterType){let e=[];switch(t){case"Point":e.push({x:window.innerWidth/2,y:window.innerHeight/2,diameter:this.settings.DefaultCircleDiameter});break;case"Ring":let i=100,s=20;for(let t=0;t<s;t++)e.push({x:window.innerWidth/2+i*Math.cos(360/s*t*Math.PI/180),y:window.innerHeight/2+i*Math.sin(360/s*t*Math.PI/180),diameter:this.settings.DefaultCircleDiameter});break;case"Random":for(let t=0;t<5;t++)e.push({x:this.p5.random(this.edges.left,this.edges.right),y:this.p5.random(this.edges.top,this.edges.bottom),diameter:this.settings.DefaultCircleDiameter});break;case"Wall":switch(this.settings.BiasTowards){case"Top":e=this.createHorizontalClusterWall(this.edges.top);break;case"Bottom":e=this.createHorizontalClusterWall(this.edges.bottom);break;case"Left":e=this.createVerticalClusterWall(this.edges.left);break;case"Right":e=this.createVerticalClusterWall(this.edges.right);break;case"Edges":e=(e=(e=(e=e.concat(this.createHorizontalClusterWall(this.edges.top))).concat(this.createHorizontalClusterWall(this.edges.bottom))).concat(this.createVerticalClusterWall(this.edges.left))).concat(this.createVerticalClusterWall(this.edges.right));break;case"Equator":e=e.concat(this.createHorizontalClusterWall(window.innerHeight/2));break;case"Meridian":e=e.concat(this.createVerticalClusterWall(window.innerWidth/2))}}this.createClusterFromParams(e)}createHorizontalClusterWall(t){let e=[],i=this.useFrame?900:window.innerWidth;for(let s=0;s<=i/this.settings.CircleDiameter;s++)e.push({x:this.edges.left+s*this.settings.CircleDiameter,y:t,diameter:this.settings.CircleDiameter});return e}createVerticalClusterWall(t){let e=[],i=this.useFrame?900:window.innerHeight;for(let s=0;s<=i/this.settings.CircleDiameter;s++)e.push({x:t,y:this.edges.top+s*this.settings.CircleDiameter,diameter:this.settings.CircleDiameter});return e}createClusterFromParams(t){if(t.length>0)for(let e of t)e.stuck=!0,this.createParticle(e)}createShapesFromPaths(t){if(t.hasOwnProperty("points")||0!=t.length)for(let e of t)if(e.solid){let t=this.system.createPolygon(e.x,e.y,e.points);t.solid=e.solid,t.closed=e.closed,this.shapes.push(t)}else for(let t=1;t<e.points.length;t++){let i=this.system.createPolygon(e.x,e.y,[[e.points[t-1][0],e.points[t-1][1]],[e.points[t][0],e.points[t][1]]]);i.solid=!1,i.closed=!1,this.shapes.push(i)}else console.error("Unable to create shapes. Paths must have an array of points [[x,y],...]")}removeAll(){for(let t of this.bodies)this.system.remove(t);for(let t of this.shapes)this.system.remove(t);this.bodies=[],this.shapes=[],this.numWalkers=0}togglePause(){this.paused=!this.paused}toggleShowWalkers(){this.showWalkers=!this.showWalkers}toggleShowClusters(){this.showClusters=!this.showClusters}toggleUseFrame(){this.useFrame=!this.useFrame,this.resetEdges()}pause(){this.paused=!0}unpause(){this.paused=!1}}},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" viewBox="0 0 900 900" version="1.1" id="svg8" sodipodi:docname="dla.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path inkscape:connector-curvature="0" id="path819" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:9.53978062" d="M 360.0972,430.72214 356.96812,456.71 347.58087,479.86521 333.41765,498.96906 315.96066,513.06641 300.90813,520.44447 284.47221,525.18747 265.76359,527.75662 243.89295,528.61302 H 209.30835 174.72376 V 430.52451 332.43599 H 210.29649 245.86922 L 268.20099,333.45707 287.23898,336.52027 303.24671,341.32917 316.48767,347.85084 334.60341,362.40932 348.37137,381.31556 357.16575,404.14142 360.0972,430.72214 M 307.79212,430.32687 306.01348,412.37583 300.67756,397.25741 291.61969,384.93871 278.41167,375.65026 270.53956,372.4553 262.46982,370.512 252.35794,369.42506 238.09592,369.06274 H 231.706 225.31609 V 430.45864 491.8545 H 231.706 238.09592 L 253.74133,491.45923 264.57783,490.27351 272.91108,487.90199 281.04669,484.21298 293.03602,474.99044 301.33632,463.13284 306.17817,448.27792 307.79212,430.32687" sodipodi:nodetypes="cccccccccccccccccccccccccccccccccccccccccccccc"></path><path inkscape:connector-curvature="0" id="path821" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:9.53978062" d="M 517.15385,528.61302 H 375.65347 V 332.43599 H 426.24576 V 490.66878 H 517.15385 V 528.61302" sodipodi:nodetypes="ccccccc"></path><path inkscape:connector-curvature="0" id="path823" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:9.53978062" d="M 731.69898,528.61302 H 679.39389 L 665.82358,488.95599 H 593.09708 L 579.52676,528.61302 H 528.53917 L 601.00213,332.43599 H 659.23601 L 731.69898,528.61302 M 653.57075,452.988 629.46033,382.63306 605.34994,452.988 H 653.57075" sodipodi:nodetypes="ccccccccccccc"></path></svg>'},function(t,e,i){"use strict";i.r(e);var s={CircleDiameter:4,MaxWalkers:1e4,ShowWalkers:!1,BiasTowards:"Center",WalkerSource:"Random",EdgeMargin:200,ReplenishWalkers:!1,ReplenishmentSource:"Edges"},r=i(0),n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])};function a(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}function o(t,e){var i=t[0],s=t[1];return[i*Math.cos(e)-s*Math.sin(e),i*Math.sin(e)+s*Math.cos(e)]}function h(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var i=0;i<t.length;i++)if("number"!=typeof t[i])throw new Error("assertNumbers arguments["+i+"] is not a number. "+typeof t[i]+" == typeof "+t[i]);return!0}var l=Math.PI;function c(t,e,i){t.lArcFlag=0===t.lArcFlag?0:1,t.sweepFlag=0===t.sweepFlag?0:1;var s=t.rX,r=t.rY,n=t.x,a=t.y;s=Math.abs(t.rX),r=Math.abs(t.rY);var h=o([(e-n)/2,(i-a)/2],-t.xRot/180*l),c=h[0],_=h[1],u=Math.pow(c,2)/Math.pow(s,2)+Math.pow(_,2)/Math.pow(r,2);1<u&&(s*=Math.sqrt(u),r*=Math.sqrt(u)),t.rX=s,t.rY=r;var p=Math.pow(s,2)*Math.pow(_,2)+Math.pow(r,2)*Math.pow(c,2),m=(t.lArcFlag!==t.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(s,2)*Math.pow(r,2)-p)/p)),d=s*_/r*m,y=-r*c/s*m,f=o([d,y],t.xRot/180*l);t.cX=f[0]+(e+n)/2,t.cY=f[1]+(i+a)/2,t.phi1=Math.atan2((_-y)/r,(c-d)/s),t.phi2=Math.atan2((-_-y)/r,(-c-d)/s),0===t.sweepFlag&&t.phi2>t.phi1&&(t.phi2-=2*l),1===t.sweepFlag&&t.phi2<t.phi1&&(t.phi2+=2*l),t.phi1*=180/l,t.phi2*=180/l}function _(t,e,i){h(t,e,i);var s=t*t+e*e-i*i;if(0>s)return[];if(0===s)return[[t*i/(t*t+e*e),e*i/(t*t+e*e)]];var r=Math.sqrt(s);return[[(t*i+e*r)/(t*t+e*e),(e*i-t*r)/(t*t+e*e)],[(t*i-e*r)/(t*t+e*e),(e*i+t*r)/(t*t+e*e)]]}var u,p=Math.PI/180;function m(t,e,i){return(1-i)*t+i*e}function d(t,e,i,s){return t+Math.cos(s/180*l)*e+Math.sin(s/180*l)*i}function y(t,e,i,s){var r=e-t,n=i-e,a=3*r+3*(s-i)-6*n,o=6*(n-r),h=3*r;return Math.abs(a)<1e-6?[-h/o]:function(t,e,i){void 0===i&&(i=1e-6);var s=t*t/4-e;if(s<-i)return[];if(s<=i)return[-t/2];var r=Math.sqrt(s);return[-t/2-r,-t/2+r]}(o/a,h/a,1e-6)}function f(t,e,i,s,r){var n=1-r;return t*(n*n*n)+e*(3*n*n*r)+i*(3*n*r*r)+s*(r*r*r)}!function(t){function e(){return r(function(t,e,i){return t.relative&&(void 0!==t.x1&&(t.x1+=e),void 0!==t.y1&&(t.y1+=i),void 0!==t.x2&&(t.x2+=e),void 0!==t.y2&&(t.y2+=i),void 0!==t.x&&(t.x+=e),void 0!==t.y&&(t.y+=i),t.relative=!1),t})}function i(){var t=NaN,e=NaN,i=NaN,s=NaN;return r(function(r,n,a){return r.type&w.SMOOTH_CURVE_TO&&(r.type=w.CURVE_TO,t=isNaN(t)?n:t,e=isNaN(e)?a:e,r.x1=r.relative?n-t:2*n-t,r.y1=r.relative?a-e:2*a-e),r.type&w.CURVE_TO?(t=r.relative?n+r.x2:r.x2,e=r.relative?a+r.y2:r.y2):(t=NaN,e=NaN),r.type&w.SMOOTH_QUAD_TO&&(r.type=w.QUAD_TO,i=isNaN(i)?n:i,s=isNaN(s)?a:s,r.x1=r.relative?n-i:2*n-i,r.y1=r.relative?a-s:2*a-s),r.type&w.QUAD_TO?(i=r.relative?n+r.x1:r.x1,s=r.relative?a+r.y1:r.y1):(i=NaN,s=NaN),r})}function s(){var t=NaN,e=NaN;return r(function(i,s,r){if(i.type&w.SMOOTH_QUAD_TO&&(i.type=w.QUAD_TO,t=isNaN(t)?s:t,e=isNaN(e)?r:e,i.x1=i.relative?s-t:2*s-t,i.y1=i.relative?r-e:2*r-e),i.type&w.QUAD_TO){t=i.relative?s+i.x1:i.x1,e=i.relative?r+i.y1:i.y1;var n=i.x1,a=i.y1;i.type=w.CURVE_TO,i.x1=((i.relative?0:s)+2*n)/3,i.y1=((i.relative?0:r)+2*a)/3,i.x2=(i.x+2*n)/3,i.y2=(i.y+2*a)/3}else t=NaN,e=NaN;return i})}function r(t){var e=0,i=0,s=NaN,r=NaN;return function(n){if(isNaN(s)&&!(n.type&w.MOVE_TO))throw new Error("path must start with moveto");var a=t(n,e,i,s,r);return n.type&w.CLOSE_PATH&&(e=s,i=r),void 0!==n.x&&(e=n.relative?e+n.x:n.x),void 0!==n.y&&(i=n.relative?i+n.y:n.y),n.type&w.MOVE_TO&&(s=e,r=i),a}}function n(t,e,i,s,n,a){return h(t,e,i,s,n,a),r(function(r,o,h,l){var c=r.x1,_=r.x2,u=r.relative&&!isNaN(l),p=void 0!==r.x?r.x:u?0:o,m=void 0!==r.y?r.y:u?0:h;function d(t){return t*t}r.type&w.HORIZ_LINE_TO&&0!==e&&(r.type=w.LINE_TO,r.y=r.relative?0:h),r.type&w.VERT_LINE_TO&&0!==i&&(r.type=w.LINE_TO,r.x=r.relative?0:o),void 0!==r.x&&(r.x=r.x*t+m*i+(u?0:n)),void 0!==r.y&&(r.y=p*e+r.y*s+(u?0:a)),void 0!==r.x1&&(r.x1=r.x1*t+r.y1*i+(u?0:n)),void 0!==r.y1&&(r.y1=c*e+r.y1*s+(u?0:a)),void 0!==r.x2&&(r.x2=r.x2*t+r.y2*i+(u?0:n)),void 0!==r.y2&&(r.y2=_*e+r.y2*s+(u?0:a));var y=t*s-e*i;if(void 0!==r.xRot&&(1!==t||0!==e||0!==i||1!==s))if(0===y)delete r.rX,delete r.rY,delete r.xRot,delete r.lArcFlag,delete r.sweepFlag,r.type=w.LINE_TO;else{var f=r.xRot*Math.PI/180,v=Math.sin(f),g=Math.cos(f),x=1/d(r.rX),b=1/d(r.rY),O=d(g)*x+d(v)*b,T=2*v*g*(x-b),C=d(v)*x+d(g)*b,E=O*s*s-T*e*s+C*e*e,M=T*(t*s+e*i)-2*(O*i*s+C*t*e),N=O*i*i-T*t*i+C*t*t,A=(Math.atan2(M,E-N)+Math.PI)%Math.PI/2,R=Math.sin(A),S=Math.cos(A);r.rX=Math.abs(y)/Math.sqrt(E*d(S)+M*R*S+N*d(R)),r.rY=Math.abs(y)/Math.sqrt(E*d(R)-M*R*S+N*d(S)),r.xRot=180*A/Math.PI}return void 0!==r.sweepFlag&&0>y&&(r.sweepFlag=+!r.sweepFlag),r})}t.ROUND=function(t){function e(e){return Math.round(e*t)/t}return void 0===t&&(t=1e13),h(t),function(t){return void 0!==t.x1&&(t.x1=e(t.x1)),void 0!==t.y1&&(t.y1=e(t.y1)),void 0!==t.x2&&(t.x2=e(t.x2)),void 0!==t.y2&&(t.y2=e(t.y2)),void 0!==t.x&&(t.x=e(t.x)),void 0!==t.y&&(t.y=e(t.y)),t}},t.TO_ABS=e,t.TO_REL=function(){return r(function(t,e,i){return t.relative||(void 0!==t.x1&&(t.x1-=e),void 0!==t.y1&&(t.y1-=i),void 0!==t.x2&&(t.x2-=e),void 0!==t.y2&&(t.y2-=i),void 0!==t.x&&(t.x-=e),void 0!==t.y&&(t.y-=i),t.relative=!0),t})},t.NORMALIZE_HVZ=function(t,e,i){return void 0===t&&(t=!0),void 0===e&&(e=!0),void 0===i&&(i=!0),r(function(s,r,n,a,o){if(isNaN(a)&&!(s.type&w.MOVE_TO))throw new Error("path must start with moveto");return e&&s.type&w.HORIZ_LINE_TO&&(s.type=w.LINE_TO,s.y=s.relative?0:n),i&&s.type&w.VERT_LINE_TO&&(s.type=w.LINE_TO,s.x=s.relative?0:r),t&&s.type&w.CLOSE_PATH&&(s.type=w.LINE_TO,s.x=s.relative?a-r:a,s.y=s.relative?o-n:o),s.type&w.ARC&&(0===s.rX||0===s.rY)&&(s.type=w.LINE_TO,delete s.rX,delete s.rY,delete s.xRot,delete s.lArcFlag,delete s.sweepFlag),s})},t.NORMALIZE_ST=i,t.QT_TO_C=s,t.INFO=r,t.SANITIZE=function(t){void 0===t&&(t=0),h(t);var e=NaN,i=NaN,s=NaN,n=NaN;return r(function(r,a,o,h,l){var c=Math.abs,_=!1,u=0,p=0;if(r.type&w.SMOOTH_CURVE_TO&&(u=isNaN(e)?0:a-e,p=isNaN(i)?0:o-i),r.type&(w.CURVE_TO|w.SMOOTH_CURVE_TO)?(e=r.relative?a+r.x2:r.x2,i=r.relative?o+r.y2:r.y2):(e=NaN,i=NaN),r.type&w.SMOOTH_QUAD_TO?(s=isNaN(s)?a:2*a-s,n=isNaN(n)?o:2*o-n):r.type&w.QUAD_TO?(s=r.relative?a+r.x1:r.x1,n=r.relative?o+r.y1:r.y2):(s=NaN,n=NaN),r.type&w.LINE_COMMANDS||r.type&w.ARC&&(0===r.rX||0===r.rY||!r.lArcFlag)||r.type&w.CURVE_TO||r.type&w.SMOOTH_CURVE_TO||r.type&w.QUAD_TO||r.type&w.SMOOTH_QUAD_TO){var m=void 0===r.x?0:r.relative?r.x:r.x-a,d=void 0===r.y?0:r.relative?r.y:r.y-o;u=isNaN(s)?void 0===r.x1?u:r.relative?r.x:r.x1-a:s-a,p=isNaN(n)?void 0===r.y1?p:r.relative?r.y:r.y1-o:n-o;var y=void 0===r.x2?0:r.relative?r.x:r.x2-a,f=void 0===r.y2?0:r.relative?r.y:r.y2-o;c(m)<=t&&c(d)<=t&&c(u)<=t&&c(p)<=t&&c(y)<=t&&c(f)<=t&&(_=!0)}return r.type&w.CLOSE_PATH&&c(a-h)<=t&&c(o-l)<=t&&(_=!0),_?[]:r})},t.MATRIX=n,t.ROTATE=function(t,e,i){void 0===e&&(e=0),void 0===i&&(i=0),h(t,e,i);var s=Math.sin(t),r=Math.cos(t);return n(r,s,-s,r,e-e*r+i*s,i-e*s-i*r)},t.TRANSLATE=function(t,e){return void 0===e&&(e=0),h(t,e),n(1,0,0,1,t,e)},t.SCALE=function(t,e){return void 0===e&&(e=t),h(t,e),n(t,0,0,e,0,0)},t.SKEW_X=function(t){return h(t),n(1,0,Math.atan(t),1,0,0)},t.SKEW_Y=function(t){return h(t),n(1,Math.atan(t),0,1,0,0)},t.X_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),h(t),n(-1,0,0,1,t,0)},t.Y_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),h(t),n(1,0,0,-1,0,t)},t.A_TO_C=function(){return r(function(t,e,i){return w.ARC===t.type?function(t,e,i){var s,r,n,a;t.cX||c(t,e,i);for(var h=Math.min(t.phi1,t.phi2),l=Math.max(t.phi1,t.phi2)-h,_=Math.ceil(l/90),u=new Array(_),d=e,y=i,f=0;f<_;f++){var v=m(t.phi1,t.phi2,f/_),g=m(t.phi1,t.phi2,(f+1)/_),x=g-v,b=4/3*Math.tan(x*p/4),O=[Math.cos(v*p)-b*Math.sin(v*p),Math.sin(v*p)+b*Math.cos(v*p)],T=O[0],C=O[1],E=[Math.cos(g*p),Math.sin(g*p)],M=E[0],N=E[1],A=[M+b*Math.sin(g*p),N-b*Math.cos(g*p)],R=A[0],S=A[1];u[f]={relative:t.relative,type:w.CURVE_TO};var k=function(e,i){var s=o([e*t.rX,i*t.rY],t.xRot),r=s[0],n=s[1];return[t.cX+r,t.cY+n]};s=k(T,C),u[f].x1=s[0],u[f].y1=s[1],r=k(R,S),u[f].x2=r[0],u[f].y2=r[1],n=k(M,N),u[f].x=n[0],u[f].y=n[1],t.relative&&(u[f].x1-=d,u[f].y1-=y,u[f].x2-=d,u[f].y2-=y,u[f].x-=d,u[f].y-=y),d=(a=[u[f].x,u[f].y])[0],y=a[1]}return u}(t,t.relative?0:e,t.relative?0:i):t})},t.ANNOTATE_ARCS=function(){return r(function(t,e,i){return t.relative&&(e=0,i=0),w.ARC===t.type&&c(t,e,i),t})},t.CLONE=function(){return function(t){var e={};for(var i in t)e[i]=t[i];return e}},t.CALCULATE_BOUNDS=function(){var t=e(),n=s(),a=i(),o=r(function(e,i,s){var r=a(n(t(function(t){var e={};for(var i in t)e[i]=t[i];return e}(e))));function h(t){t>o.maxX&&(o.maxX=t),t<o.minX&&(o.minX=t)}function l(t){t>o.maxY&&(o.maxY=t),t<o.minY&&(o.minY=t)}if(r.type&w.DRAWING_COMMANDS&&(h(i),l(s)),r.type&w.HORIZ_LINE_TO&&h(r.x),r.type&w.VERT_LINE_TO&&l(r.y),r.type&w.LINE_TO&&(h(r.x),l(r.y)),r.type&w.CURVE_TO){h(r.x),l(r.y);for(var u=0,p=y(i,r.x1,r.x2,r.x);u<p.length;u++)0<(H=p[u])&&1>H&&h(f(i,r.x1,r.x2,r.x,H));for(var m=0,v=y(s,r.y1,r.y2,r.y);m<v.length;m++)0<(H=v[m])&&1>H&&l(f(s,r.y1,r.y2,r.y,H))}if(r.type&w.ARC){h(r.x),l(r.y),c(r,i,s);for(var g=r.xRot/180*Math.PI,x=Math.cos(g)*r.rX,b=Math.sin(g)*r.rX,O=-Math.sin(g)*r.rY,T=Math.cos(g)*r.rY,C=r.phi1<r.phi2?[r.phi1,r.phi2]:-180>r.phi2?[r.phi2+360,r.phi1+360]:[r.phi2,r.phi1],E=C[0],M=C[1],N=function(t){var e=t[0],i=t[1],s=180*Math.atan2(i,e)/Math.PI;return s<E?s+360:s},A=0,R=_(O,-x,0).map(N);A<R.length;A++)(H=R[A])>E&&H<M&&h(d(r.cX,x,O,H));for(var S=0,k=_(T,-b,0).map(N);S<k.length;S++){var H;(H=k[S])>E&&H<M&&l(d(r.cY,b,T,H))}}return e});return o.minX=1/0,o.maxX=-1/0,o.minY=1/0,o.maxY=-1/0,o}}(u||(u={}));var v,g,x=function(){function t(){}return t.prototype.round=function(t){return this.transform(u.ROUND(t))},t.prototype.toAbs=function(){return this.transform(u.TO_ABS())},t.prototype.toRel=function(){return this.transform(u.TO_REL())},t.prototype.normalizeHVZ=function(t,e,i){return this.transform(u.NORMALIZE_HVZ(t,e,i))},t.prototype.normalizeST=function(){return this.transform(u.NORMALIZE_ST())},t.prototype.qtToC=function(){return this.transform(u.QT_TO_C())},t.prototype.aToC=function(){return this.transform(u.A_TO_C())},t.prototype.sanitize=function(t){return this.transform(u.SANITIZE(t))},t.prototype.translate=function(t,e){return this.transform(u.TRANSLATE(t,e))},t.prototype.scale=function(t,e){return this.transform(u.SCALE(t,e))},t.prototype.rotate=function(t,e,i){return this.transform(u.ROTATE(t,e,i))},t.prototype.matrix=function(t,e,i,s,r,n){return this.transform(u.MATRIX(t,e,i,s,r,n))},t.prototype.skewX=function(t){return this.transform(u.SKEW_X(t))},t.prototype.skewY=function(t){return this.transform(u.SKEW_Y(t))},t.prototype.xSymmetry=function(t){return this.transform(u.X_AXIS_SYMMETRY(t))},t.prototype.ySymmetry=function(t){return this.transform(u.Y_AXIS_SYMMETRY(t))},t.prototype.annotateArcs=function(){return this.transform(u.ANNOTATE_ARCS())},t}(),b=function(t){return" "===t||"\t"===t||"\r"===t||"\n"===t},O=function(t){return"0".charCodeAt(0)<=t.charCodeAt(0)&&t.charCodeAt(0)<="9".charCodeAt(0)},T=function(t){function e(){var e=t.call(this)||this;return e.curNumber="",e.curCommandType=-1,e.curCommandRelative=!1,e.canParseCommandOrComma=!0,e.curNumberHasExp=!1,e.curNumberHasExpDigits=!1,e.curNumberHasDecimal=!1,e.curArgs=[],e}return a(e,t),e.prototype.finish=function(t){if(void 0===t&&(t=[]),this.parse(" ",t),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError("Unterminated command at the path end.");return t},e.prototype.parse=function(t,e){var i=this;void 0===e&&(e=[]);for(var s=function(t){e.push(t),i.curArgs.length=0,i.canParseCommandOrComma=!0},r=0;r<t.length;r++){var n=t[r];if(O(n))this.curNumber+=n,this.curNumberHasExpDigits=this.curNumberHasExp;else if("e"!==n&&"E"!==n)if("-"!==n&&"+"!==n||!this.curNumberHasExp||this.curNumberHasExpDigits)if("."!==n||this.curNumberHasExp||this.curNumberHasDecimal){if(this.curNumber&&-1!==this.curCommandType){var a=Number(this.curNumber);if(isNaN(a))throw new SyntaxError("Invalid number ending at "+r);if(this.curCommandType===w.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>a)throw new SyntaxError('Expected positive number, got "'+a+'" at index "'+r+'"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&"0"!==this.curNumber&&"1"!==this.curNumber)throw new SyntaxError('Expected a flag, got "'+this.curNumber+'" at index "'+r+'"');this.curArgs.push(a),this.curArgs.length===C[this.curCommandType]&&(w.HORIZ_LINE_TO===this.curCommandType?s({type:w.HORIZ_LINE_TO,relative:this.curCommandRelative,x:a}):w.VERT_LINE_TO===this.curCommandType?s({type:w.VERT_LINE_TO,relative:this.curCommandRelative,y:a}):this.curCommandType===w.MOVE_TO||this.curCommandType===w.LINE_TO||this.curCommandType===w.SMOOTH_QUAD_TO?(s({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),w.MOVE_TO===this.curCommandType&&(this.curCommandType=w.LINE_TO)):this.curCommandType===w.CURVE_TO?s({type:w.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===w.SMOOTH_CURVE_TO?s({type:w.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===w.QUAD_TO?s({type:w.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===w.ARC&&s({type:w.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber="",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!b(n))if(","===n&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if("+"!==n&&"-"!==n&&"."!==n){if(0!==this.curArgs.length)throw new SyntaxError("Unterminated command at index "+r+".");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character "'+n+'" at index '+r+". Command cannot follow comma");if(this.canParseCommandOrComma=!1,"z"!==n&&"Z"!==n)if("h"===n||"H"===n)this.curCommandType=w.HORIZ_LINE_TO,this.curCommandRelative="h"===n;else if("v"===n||"V"===n)this.curCommandType=w.VERT_LINE_TO,this.curCommandRelative="v"===n;else if("m"===n||"M"===n)this.curCommandType=w.MOVE_TO,this.curCommandRelative="m"===n;else if("l"===n||"L"===n)this.curCommandType=w.LINE_TO,this.curCommandRelative="l"===n;else if("c"===n||"C"===n)this.curCommandType=w.CURVE_TO,this.curCommandRelative="c"===n;else if("s"===n||"S"===n)this.curCommandType=w.SMOOTH_CURVE_TO,this.curCommandRelative="s"===n;else if("q"===n||"Q"===n)this.curCommandType=w.QUAD_TO,this.curCommandRelative="q"===n;else if("t"===n||"T"===n)this.curCommandType=w.SMOOTH_QUAD_TO,this.curCommandRelative="t"===n;else{if("a"!==n&&"A"!==n)throw new SyntaxError('Unexpected character "'+n+'" at index '+r+".");this.curCommandType=w.ARC,this.curCommandRelative="a"===n}else e.push({type:w.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=n,this.curNumberHasDecimal="."===n}else this.curNumber+=n,this.curNumberHasDecimal=!0;else this.curNumber+=n;else this.curNumber+=n,this.curNumberHasExp=!0}return e},e.prototype.transform=function(t){return Object.create(this,{parse:{value:function(e,i){void 0===i&&(i=[]);for(var s=0,r=Object.getPrototypeOf(this).parse.call(this,e);s<r.length;s++){var n=r[s],a=t(n);Array.isArray(a)?i.push.apply(i,a):i.push(a)}return i}}})},e}(x),w=function(t){function e(i){var s=t.call(this)||this;return s.commands="string"==typeof i?e.parse(i):i,s}return a(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=u.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],i=0,s=this.commands;i<s.length;i++){var r=t(s[i]);Array.isArray(r)?e.push.apply(e,r):e.push(r)}return this.commands=e,this},e.encode=function(t){return M(t)},e.parse=function(t){var e=new T,i=[];return e.parse(t,i),e.finish(i),i},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(x),C=((v={})[w.MOVE_TO]=2,v[w.LINE_TO]=2,v[w.HORIZ_LINE_TO]=1,v[w.VERT_LINE_TO]=1,v[w.CLOSE_PATH]=0,v[w.QUAD_TO]=4,v[w.SMOOTH_QUAD_TO]=2,v[w.CURVE_TO]=6,v[w.SMOOTH_CURVE_TO]=4,v[w.ARC]=7,v),E=" ";function M(t){var e="";Array.isArray(t)||(t=[t]);for(var i=0;i<t.length;i++){var s=t[i];if(s.type===w.CLOSE_PATH)e+="z";else if(s.type===w.HORIZ_LINE_TO)e+=(s.relative?"h":"H")+s.x;else if(s.type===w.VERT_LINE_TO)e+=(s.relative?"v":"V")+s.y;else if(s.type===w.MOVE_TO)e+=(s.relative?"m":"M")+s.x+E+s.y;else if(s.type===w.LINE_TO)e+=(s.relative?"l":"L")+s.x+E+s.y;else if(s.type===w.CURVE_TO)e+=(s.relative?"c":"C")+s.x1+E+s.y1+E+s.x2+E+s.y2+E+s.x+E+s.y;else if(s.type===w.SMOOTH_CURVE_TO)e+=(s.relative?"s":"S")+s.x2+E+s.y2+E+s.x+E+s.y;else if(s.type===w.QUAD_TO)e+=(s.relative?"q":"Q")+s.x1+E+s.y1+E+s.x+E+s.y;else if(s.type===w.SMOOTH_QUAD_TO)e+=(s.relative?"t":"T")+s.x+E+s.y;else{if(s.type!==w.ARC)throw new Error('Unexpected command type "'+s.type+'" at index '+i+".");e+=(s.relative?"a":"A")+s.rX+E+s.rY+E+s.xRot+E+ +s.lArcFlag+E+ +s.sweepFlag+E+s.x+E+s.y}}return e}var N=function(t){function e(i){var s=t.call(this)||this;return s.commands="string"==typeof i?e.parse(i):i,s}return a(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=u.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],i=0,s=this.commands;i<s.length;i++){var r=t(s[i]);Array.isArray(r)?e.push.apply(e,r):e.push(r)}return this.commands=e,this},e.encode=function(t){return M(t)},e.parse=function(t){var e=new T,i=[];return e.parse(t,i),e.finish(i),i},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(x);(g={})[N.MOVE_TO]=2,g[N.LINE_TO]=2,g[N.HORIZ_LINE_TO]=1,g[N.VERT_LINE_TO]=1,g[N.CLOSE_PATH]=0,g[N.QUAD_TO]=4,g[N.SMOOTH_QUAD_TO]=2,g[N.CURVE_TO]=6,g[N.SMOOTH_CURVE_TO]=4,g[N.ARC]=7;class A{constructor(){}static loadFromFileContents(t){let e=(new DOMParser).parseFromString(t,"image/svg+xml");return this.load(e)}static load(t){let e=t.querySelectorAll("path"),i={},s=[];i.points=[];for(let t of e){let e=new N(t.getAttribute("d")),r={x:0,y:0};for(let[t,n]of e.commands.entries()){switch(n.type){case N.MOVE_TO:case N.LINE_TO:i.points.push([n.x,n.y]);break;case N.HORIZ_LINE_TO:i.points.push([n.x,r.y]);break;case N.VERT_LINE_TO:i.points.push([r.x,n.y]);break;case N.CLOSE_PATH:i.closed=!0,s.push(i),(i={}).points=[]}if(t==e.commands.length-1&&n.type!=N.CLOSE_PATH){let t=i.points[0],e=i.points[i.points.length-1];Math.hypot(e.x-t.x,e.y-t.y)<.1?i.closed=!0:i.closed=!1,s.push(i),(i={}).points=[]}n.hasOwnProperty("x")&&(r.x=n.x),n.hasOwnProperty("y")&&(r.y=n.y)}}for(let t of s){t.x=t.points[0][0],t.y=t.points[0][1],t.points.push([t.x,t.y]);for(let e of t.points)e[0]-=t.x,e[1]-=t.y}return s}}let R,S={dla:i(1)};new p5(function(t){function e(){R.removeAll(),i(S.dla),R.createDefaultWalkers()}function i(t){let e=A.loadFromFileContents(t);for(let t of e)t.stuck=!0,t.solid=!1,t.x+=window.innerWidth/2-450+50,t.y+=window.innerHeight/2-450;R.createShapesFromPaths(e)}t.setup=function(){t.createCanvas(window.innerWidth,window.innerHeight),t.colorMode(t.HSB,255),t.ellipseMode(t.CENTER),(R=new r.a(t,s)).createDefaultWalkers(),i(S.dla)},t.draw=function(){R.iterate(),R.draw()},t.keyReleased=function(){switch(t.key){case" ":R.togglePause();break;case"w":R.toggleShowWalkers();break;case"c":R.toggleShowClusters();break;case"r":e();break;case"f":R.toggleUseFrame(),e()}}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,