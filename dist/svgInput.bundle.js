!function(t){var e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(i,r,function(e){return t[e]}.bind(null,r));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=3)}([function(t,e,s){"use strict";var i={DefaultCircleDiameter:2,DefaultInitialClusterType:"Random",ShowClusters:!0,ShowWalkers:!0,MaxWalkers:2e4,WalkerSource:"Random",ReplenishWalkers:!1,Stickiness:.9,BiasTowards:"Center",BiasForce:1,UseFrame:!0,FrameSize:900};const r=[];class n{constructor(){this._bvh_parent=null,this._bvh_branch=!0,this._bvh_left=null,this._bvh_right=null,this._bvh_sort=0,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}static getBranch(){return r.length?r.pop():new n}static releaseBranch(t){r.push(t)}static sortBranches(t,e){return t.sort>e.sort?-1:1}}class a{constructor(){this._hierarchy=null,this._bodies=[],this._dirty_branches=[]}insert(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=this,this._bodies.push(t)}const s=t._polygon,i=t.x,r=t.y;s&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords();const a=t._bvh_padding,o=s?0:t.radius*t.scale,h=(s?t._min_x:i-o)-a,l=(s?t._min_y:r-o)-a,c=(s?t._max_x:i+o)+a,_=(s?t._max_y:r+o)+a;t._bvh_min_x=h,t._bvh_min_y=l,t._bvh_max_x=c,t._bvh_max_y=_;let u=this._hierarchy,p=0;if(u)for(;;){if(!u._bvh_branch){const e=u._bvh_parent,s=u._bvh_min_x,i=u._bvh_min_y,r=u._bvh_max_x,a=u._bvh_max_y,o=u._bvh_parent=t._bvh_parent=n.getBranch();o._bvh_parent=e,o._bvh_left=u,o._bvh_right=t,o._bvh_sort=p++,o._bvh_min_x=h<s?h:s,o._bvh_min_y=l<i?l:i,o._bvh_max_x=c>r?c:r,o._bvh_max_y=_>a?_:a,e?e._bvh_left===u?e._bvh_left=o:e._bvh_right=o:this._hierarchy=o;break}{const t=u._bvh_left,e=t._bvh_min_y,s=t._bvh_max_x,i=t._bvh_max_y,r=h<t._bvh_min_x?h:t._bvh_min_x,n=l<e?l:e,a=c>s?c:s,o=_>i?_:i,m=(a-r)*(o-n)-(s-t._bvh_min_x)*(i-e),d=u._bvh_right,y=d._bvh_min_x,f=d._bvh_min_y,g=d._bvh_max_x,v=d._bvh_max_y,x=h<y?h:y,b=l<f?l:f,O=c>g?c:g,w=_>v?_:v,T=(O-x)*(w-b)-(g-y)*(v-f);u._bvh_sort=p++,u._bvh_min_x=r<x?r:x,u._bvh_min_y=n<b?n:b,u._bvh_max_x=a>O?a:O,u._bvh_max_y=o>w?o:w,u=m<=T?t:d}}else this._hierarchy=t}remove(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=null,this._bodies.splice(this._bodies.indexOf(t),1)}if(this._hierarchy===t)return void(this._hierarchy=null);const s=t._bvh_parent,i=s._bvh_parent,r=s._bvh_left,a=r===t?s._bvh_right:r;if(a._bvh_parent=i,a._bvh_branch&&(a._bvh_sort=s._bvh_sort),i){i._bvh_left===s?i._bvh_left=a:i._bvh_right=a;let t=i;for(;t;){const e=t._bvh_left,s=e._bvh_min_x,i=e._bvh_min_y,r=e._bvh_max_x,n=e._bvh_max_y,a=t._bvh_right,o=a._bvh_min_x,h=a._bvh_min_y,l=a._bvh_max_x,c=a._bvh_max_y;t._bvh_min_x=s<o?s:o,t._bvh_min_y=i<h?i:h,t._bvh_max_x=r>l?r:l,t._bvh_max_y=n>c?n:c,t=t._bvh_parent}}else this._hierarchy=a;n.releaseBranch(s)}update(){const t=this._bodies,e=t.length;for(let s=0;s<e;++s){const e=t[s];let i=!1;if(i||e.padding===e._bvh_padding||(e._bvh_padding=e.padding,i=!0),!i){const t=e._polygon;t&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords();const s=e.x,r=e.y,n=t?0:e.radius*e.scale,a=t?e._min_x:s-n,o=t?e._min_y:r-n,h=t?e._max_x:s+n,l=t?e._max_y:r+n;i=a<e._bvh_min_x||o<e._bvh_min_y||h>e._bvh_max_x||l>e._bvh_max_y}i&&(this.remove(e,!0),this.insert(e,!0))}}potentials(t){const e=[],s=t._bvh_min_x,i=t._bvh_min_y,r=t._bvh_max_x,n=t._bvh_max_y;let a=this._hierarchy,o=!0;if(!a||!a._bvh_branch)return e;for(;a;){if(o){o=!1;let t=a._bvh_branch?a._bvh_left:null;for(;t&&t._bvh_max_x>=s&&t._bvh_max_y>=i&&t._bvh_min_x<=r&&t._bvh_min_y<=n;)t=(a=t)._bvh_branch?a._bvh_left:null}const h=a._bvh_branch,l=h?a._bvh_right:null;if(l&&l._bvh_max_x>s&&l._bvh_max_y>i&&l._bvh_min_x<r&&l._bvh_min_y<n)a=l,o=!0;else{h||a===t||e.push(a);let s=a._bvh_parent;if(!s)break;for(;s&&s._bvh_right===a;)s=(a=s)._bvh_parent;a=s}}return e}draw(t){const e=this._bodies,s=e.length;for(let i=0;i<s;++i)e[i].draw(t)}drawBVH(t){let e=this._hierarchy,s=!0;for(;e;){if(s){s=!1;let t=e._bvh_branch?e._bvh_left:null;for(;t;)t=(e=t)._bvh_branch?e._bvh_left:null}const i=e._bvh_branch,r=e._bvh_min_x,n=e._bvh_min_y,a=e._bvh_max_x,o=e._bvh_max_y,h=i?e._bvh_right:null;if(t.moveTo(r,n),t.lineTo(a,n),t.lineTo(a,o),t.lineTo(r,o),t.lineTo(r,n),h)e=h,s=!0;else{let t=e._bvh_parent;if(!t)break;for(;t&&t._bvh_right===e;)t=(e=t)._bvh_parent;e=t}}}}class o{constructor(){this.collision=!1,this.a=null,this.b=null,this.a_in_b=!1,this.a_in_b=!1,this.overlap=0,this.overlap_x=0,this.overlap_y=0}}function h(t,e,s=null,i=!0){const r=t._polygon,n=e._polygon;let a=!1;return s&&(s.a=t,s.b=e,s.a_in_b=!0,s.b_in_a=!0,s.overlap=null,s.overlap_x=0,s.overlap_y=0),r&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords(),n&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords(),i&&!function(t,e){const s=t._polygon,i=s?0:t.x,r=s?0:t.y,n=s?0:t.radius*t.scale,a=s?t._min_x:i-n,o=s?t._min_y:r-n,h=s?t._max_x:i+n,l=s?t._max_y:r+n,c=e._polygon,_=c?0:e.x,u=c?0:e.y,p=c?0:e.radius*e.scale,m=c?e._min_x:_-p,d=c?e._min_y:u-p,y=c?e._max_x:_+p,f=c?e._max_y:u+p;return a<y&&o<f&&h>m&&l>d}(t,e)||(r&&t._dirty_normals&&t._calculateNormals(),n&&e._dirty_normals&&e._calculateNormals(),a=r&&n?function(t,e,s=null){const i=t._coords.length,r=e._coords.length;if(2===i&&2===r){const i=t._coords,r=e._coords;return s&&(s.overlap=0),i[0]===r[0]&&i[1]===r[1]}const n=t._coords,a=e._coords,o=t._normals,h=e._normals;if(i>2)for(let t=0,e=1;t<i;t+=2,e+=2)if(c(n,a,o[t],o[e],s))return!1;if(r>2)for(let t=0,e=1;t<r;t+=2,e+=2)if(c(n,a,h[t],h[e],s))return!1;return!0}(t,e,s):r?l(t,e,s,!1):n?l(e,t,s,!0):function(t,e,s=null){const i=t.radius*t.scale,r=e.radius*e.scale,n=e.x-t.x,a=e.y-t.y,o=i+r,h=n*n+a*a;if(h>o*o)return!1;if(s){const t=Math.sqrt(h);s.a_in_b=i<=r&&t<=r-i,s.b_in_a=r<=i&&t<=i-r,s.overlap=o-t,s.overlap_x=n/t,s.overlap_y=a/t}return!0}(t,e,s)),s&&(s.collision=a),a}function l(t,e,s=null,i=!1){const r=t._coords,n=t._edges,a=t._normals,o=e.x,h=e.y,l=e.radius*e.scale,c=2*l,_=l*l,u=r.length;let p=!0,m=!0,d=null,y=0,f=0;if(2===u){const t=o-r[0],e=h-r[1],i=t*t+e*e;if(i>_)return!1;if(s){const s=Math.sqrt(i);d=l-s,y=t/s,f=e/s,m=!1}}else for(let t=0,e=1;t<u;t+=2,e+=2){const i=o-r[t],g=h-r[e],v=n[t],x=n[e],b=i*v+g*x,O=b<0?-1:b>v*v+x*x?1:0;let w=!1,T=0,C=0,E=0;if(s&&p&&i*i+g*g>_&&(p=!1),O){const e=-1===O,a=e?0===t?u-2:t-2:t===u-2?0:t+2,c=a+1,p=o-r[a],d=h-r[c],y=n[a],f=n[c],v=p*y+d*f;if((v<0?-1:v>y*y+f*f?1:0)===-O){const t=e?i:p,r=e?g:d,n=t*t+r*r;if(n>_)return!1;if(s){const e=Math.sqrt(n);w=!0,T=l-e,C=t/e,E=r/e,m=!1}}}else{const r=a[t],n=a[e],o=i*r+g*n,h=o<0?-o:o;if(o>0&&h>l)return!1;s&&(w=!0,T=l-o,C=r,E=n,(m&&o>=0||T<c)&&(m=!1))}w&&(null===d||d>T)&&(d=T,y=C,f=E)}return s&&(s.a_in_b=i?m:p,s.b_in_a=i?p:m,s.overlap=d,s.overlap_x=i?-y:y,s.overlap_y=i?-f:f),!0}function c(t,e,s,i,r=null){const n=t.length,a=e.length;if(!n||!a)return!0;let o=null,h=null,l=null,c=null;for(let e=0,r=1;e<n;e+=2,r+=2){const n=t[e]*s+t[r]*i;(null===o||o>n)&&(o=n),(null===h||h<n)&&(h=n)}for(let t=0,r=1;t<a;t+=2,r+=2){const n=e[t]*s+e[r]*i;(null===l||l>n)&&(l=n),(null===c||c<n)&&(c=n)}if(o>c||h<l)return!0;if(r){let t=0;if(o<l)if(r.a_in_b=!1,h<c)t=h-l,r.b_in_a=!1;else{const e=h-l,s=c-o;t=e<s?e:-s}else if(r.b_in_a=!1,h>c)t=o-c,r.a_in_b=!1;else{const e=h-l,s=c-o;t=e<s?e:-s}const e=r.overlap,n=t<0?-t:t;if(null===e||e>n){const e=t<0?-1:1;r.overlap=n,r.overlap_x=s*e,r.overlap_y=i*e}}return!1}class _{constructor(t=0,e=0,s=0){this.x=t,this.y=e,this.padding=s,this._circle=!1,this._polygon=!1,this._point=!1,this._bvh=null,this._bvh_parent=null,this._bvh_branch=!1,this._bvh_padding=s,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}collides(t,e=null,s=!0){return h(this,t,e,s)}potentials(){const t=this._bvh;if(null===t)throw new Error("Body does not belong to a collision system");return t.potentials(this)}remove(){const t=this._bvh;t&&t.remove(this,!1)}createResult(){return new o}static createResult(){return new o}}class u extends _{constructor(t=0,e=0,s=0,i=1,r=0){super(t,e,r),this.radius=s,this.scale=i}draw(t){const e=this.x,s=this.y,i=this.radius*this.scale;t.moveTo(e+i,s),t.arc(e,s,i,0,2*Math.PI)}}class p extends _{constructor(t=0,e=0,s=[],i=0,r=1,n=1,a=0){super(t,e,a),this.angle=i,this.scale_x=r,this.scale_y=n,this._polygon=!0,this._x=t,this._y=e,this._angle=i,this._scale_x=r,this._scale_y=n,this._min_x=0,this._min_y=0,this._max_x=0,this._max_y=0,this._points=null,this._coords=null,this._edges=null,this._normals=null,this._dirty_coords=!0,this._dirty_normals=!0,p.prototype.setPoints.call(this,s)}draw(t){(this._dirty_coords||this.x!==this._x||this.y!==this._y||this.angle!==this._angle||this.scale_x!==this._scale_x||this.scale_y!==this._scale_y)&&this._calculateCoords();const e=this._coords;if(2===e.length)t.moveTo(e[0],e[1]),t.arc(e[0],e[1],1,0,2*Math.PI);else{t.moveTo(e[0],e[1]);for(let s=2;s<e.length;s+=2)t.lineTo(e[s],e[s+1]);e.length>4&&t.lineTo(e[0],e[1])}}setPoints(t){const e=t.length;this._points=new Float64Array(2*e),this._coords=new Float64Array(2*e),this._edges=new Float64Array(2*e),this._normals=new Float64Array(2*e);const s=this._points;for(let i=0,r=0,n=1;i<e;++i,r+=2,n+=2){const e=t[i];s[r]=e[0],s[n]=e[1]}this._dirty_coords=!0}_calculateCoords(){const t=this.x,e=this.y,s=this.angle,i=this.scale_x,r=this.scale_y,n=this._points,a=this._coords,o=n.length;let h,l,c,_;for(let u=0,p=1;u<o;u+=2,p+=2){let o=n[u]*i,m=n[p]*r;if(s){const t=Math.cos(s),e=Math.sin(s),i=o;o=i*t-m*e,m=i*e+m*t}o+=t,m+=e,a[u]=o,a[p]=m,0===u?(h=l=o,c=_=m):(o<h?h=o:o>l&&(l=o),m<c?c=m:m>_&&(_=m))}this._x=t,this._y=e,this._angle=s,this._scale_x=i,this._scale_y=r,this._min_x=h,this._min_y=c,this._max_x=l,this._max_y=_,this._dirty_coords=!1,this._dirty_normals=!0}_calculateNormals(){const t=this._coords,e=this._edges,s=this._normals,i=t.length;for(let r=0,n=1;r<i;r+=2,n+=2){const a=r+2<i?r+2:0,o=t[a]-t[r],h=t[a+1]-t[n],l=o||h?Math.sqrt(o*o+h*h):0;e[r]=o,e[n]=h,s[r]=l?h/l:0,s[n]=l?-o/l:0}this._dirty_normals=!1}}class m extends p{constructor(t=0,e=0,s=0){super(t,e,[[0,0]],0,1,1,s),this._point=!0}}m.prototype.setPoints=void 0;class d{constructor(){this._bvh=new a}createCircle(t=0,e=0,s=0,i=1,r=0){const n=new u(t,e,s,i,r);return this._bvh.insert(n),n}createPolygon(t=0,e=0,s=[[0,0]],i=0,r=1,n=1,a=0){const o=new p(t,e,s,i,r,n,a);return this._bvh.insert(o),o}createPoint(t=0,e=0,s=0){const i=new m(t,e,s);return this._bvh.insert(i),i}createResult(){return new o}static createResult(){return new o}insert(...t){for(const e of t)this._bvh.insert(e,!1);return this}remove(...t){for(const e of t)this._bvh.remove(e,!1);return this}update(){return this._bvh.update(),this}draw(t){return this._bvh.draw(t)}drawBVH(t){return this._bvh.drawBVH(t)}potentials(t){return this._bvh.potentials(t)}collides(t,e,s=null,i=!0){return h(t,e,s,i)}}s.d(e,"a",function(){return y});class y{constructor(t,e){this.p5=t,this.settings=Object.assign({},i,e),this.paused=!1,this.showWalkers=this.settings.ShowWalkers,this.showClusters=this.settings.ShowClusters,this.useFrame=this.settings.UseFrame,this.numWalkers=0,this.edgeMargin=this.settings.hasOwnProperty("EdgeMargin")?this.settings.EdgeMargin:0,this.edges={},this.frame={},"number"==typeof this.settings.FrameSize?(this.frame.left=window.innerWidth/2-this.settings.FrameSize/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize/2):"object"==typeof this.settings.FrameSize&&(this.frame.left=window.innerWidth/2-this.settings.FrameSize[0]/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize[0]/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize[1]/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize[1]/2),this.resetEdges(),this.maxDistance=this.p5.dist(this.edges.left,this.edges.top,window.innerWidth/2,window.innerHeight/2),this.system=new d,this.bodies=[],this.shapes=[]}iterate(){this.paused||(this.settings.ReplenishWalkers&&this.numWalkers<this.settings.MaxWalkers&&this.createDefaultWalkers(this.settings.MaxWalkers-this.numWalkers,this.settings.ReplenishmentSource),this.moveWalkers(),this.system.update(),this.handleCollisions())}draw(){this.p5.background(255);for(let t of this.shapes){this.p5.noFill(),this.p5.stroke(100),this.p5.beginShape();for(let e=0;e<t._coords.length;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}for(let t of this.bodies)if(t._point)this.p5.noFill(),t.stuck&&this.showClusters?(this.p5.noStroke(),this.p5.fill(200),this.p5.ellipse(t.x,t.y,5),this.p5.stroke(0)):!t.stuck&&this.showWalkers?this.p5.stroke(0):this.p5.noStroke(),this.p5.point(t.x,t.y);else if(t._circle)this.p5.noStroke(),t.stuck&&this.showClusters?this.p5.fill(120):!t.stuck&&this.showWalkers?this.p5.fill(230):this.p5.noFill(),this.p5.ellipse(t.x,t.y,2*t.radius);else if(t._polygon){this.p5.noStroke(),t.stuck&&this.showClusters?this.p5.fill(120):!t.stuck&&this.showWalkers?this.p5.fill(230):this.p5.noFill(),this.p5.beginShape();for(let e=0;e<t._coords.length-1;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}this.useFrame&&this.drawFrame()}drawFrame(){this.p5.noFill(),this.p5.stroke(0),"number"==typeof this.settings.FrameSize?this.p5.rect(window.innerWidth/2-this.settings.FrameSize/2-1,window.innerHeight/2-this.settings.FrameSize/2-1,this.settings.FrameSize+2,this.settings.FrameSize+2):"object"==typeof this.settings.FrameSize&&this.p5.rect(window.innerWidth/2-this.settings.FrameSize[0]/2-1,window.innerHeight/2-this.settings.FrameSize[1]/2-1,this.settings.FrameSize[0]+2,this.settings.FrameSize[1]+2)}resetEdges(){this.edges.left=this.useFrame?this.frame.left:0,this.edges.right=this.useFrame?this.frame.right:window.innerWidth,this.edges.top=this.useFrame?this.frame.top:0,this.edges.bottom=this.useFrame?this.frame.bottom:window.innerHeight}moveWalkers(){if(this.bodies.length>0)for(let t of this.bodies)if(!t.stuck){let e,s=this.p5.random(-1,1),i=this.p5.random(-1,1);switch(this.settings.BiasTowards){case"Top":i-=this.settings.BiasForce;break;case"Bottom":i+=this.settings.BiasForce;break;case"Left":s-=this.settings.BiasForce;break;case"Right":s+=this.settings.BiasForce;break;case"Center":s+=(e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2)).x,i+=e.y;break;case"Edges":s-=(e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2)).x,i-=e.y;break;case"Equator":t.y<window.innerHeight/2?i+=this.settings.BiasForce:i-=this.settings.BiasForce;break;case"Meridian":t.x<window.innerWidth/2?s+=this.settings.BiasForce:s-=this.settings.BiasForce}t._point&&(s=Math.round(s),i=Math.round(i)),t.x+s>this.edges.left&&t.x+s<this.edges.right&&(t.x+=s),t.y+i>this.edges.top&&t.y+i<this.edges.bottom&&(t.y+=i),t.age++}}getDeltasTowards(t,e,s,i){let r=Math.atan2(i-e,s-t);return{x:Math.cos(r)*this.settings.BiasForce,y:Math.sin(r)*this.settings.BiasForce}}handleCollisions(){for(let t of this.shapes){const e=t.potentials();for(let s of e)t.collides(s)&&(s.stuck=!0,this.numWalkers--)}for(let t of this.bodies){if(t.stuck)continue;const e=t.potentials();for(let s of e)t._point?s.stuck&&(t.stuck=!0,this.numWalkers--):s.stuck&&t.collides(s)&&(t.stuck=!0,this.numWalkers--)}}createParticle(t){if(void 0===t||"object"!=typeof t)return;let e;if(t.hasOwnProperty("type"))switch(t.type){case"Point":(e=this.system.createPoint(Math.round(t.x),Math.round(t.y)))._point=!0;break;case"Circle":default:(e=this.system.createCircle(t.x,t.y,t.diameter/2))._circle=!0;break;case"Polygon":(e=this.system.createPolygon(t.x,t.y,t.polygon,t.hasOwnProperty("rotation")?this.p5.radians(t.rotation):0))._polygon=!0}else{const s=this.settings.hasOwnProperty("CircleDiameter")?this.settings.CircleDiameter:this.settings.DefaultCircleDiameter,i=t.hasOwnProperty("diameter")?t.diameter:s;(e=this.system.createCircle(t.x,t.y,i/2))._circle=!0}e.stuck=!!t.hasOwnProperty("stuck")&&t.stuck,e.age=0,this.bodies.push(e)}createWalker(t){this.createParticle(t),this.numWalkers++}createDefaultWalkers(t=this.settings.MaxWalkers,e=this.settings.WalkerSource){for(let s=0;s<t;s++){let t={};switch(e){case"Edges":switch(Math.round(this.p5.random(1,4))){case 1:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.top+this.edgeMargin);break;case 3:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.bottom-this.edgeMargin,this.edges.bottom);break;case 4:t.x=this.p5.random(this.edges.left,this.edges.left+this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case 2:t.x=this.p5.random(this.edges.right-this.edgeMargin,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom)}break;case"Circle":let s=50,i=this.p5.random(360);t.x=window.innerWidth/2+s*Math.cos(i*Math.PI/180),t.y=window.innerHeight/2+s*Math.sin(i*Math.PI/180);break;case"Random":t.x=this.p5.random(this.edges.left,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case"Random-Circle":let r=this.p5.random(360),n=this.p5.random(5,430);t.x=window.innerWidth/2+n*Math.cos(r*Math.PI/180),t.y=window.innerHeight/2+n*Math.sin(r*Math.PI/180);break;case"Center":t.x=window.innerWidth/2,t.y=window.innerHeight/2}if(this.settings.VaryDiameterByDistance){let e=this.p5.dist(t.x,t.y,window.innerWidth/2,window.innerHeight/2);t.diameter=this.p5.map(e,0,this.maxDistance,this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1])}this.createWalker(t)}}createDefaultClusters(t=this.settings.DefaultInitialClusterType){let e=[];switch(t){case"Point":e.push({x:window.innerWidth/2,y:window.innerHeight/2,diameter:this.settings.DefaultCircleDiameter});break;case"Ring":let s=100,i=20;for(let t=0;t<i;t++)e.push({x:window.innerWidth/2+s*Math.cos(360/i*t*Math.PI/180),y:window.innerHeight/2+s*Math.sin(360/i*t*Math.PI/180),diameter:this.settings.DefaultCircleDiameter});break;case"Random":for(let t=0;t<5;t++)e.push({x:this.p5.random(this.edges.left,this.edges.right),y:this.p5.random(this.edges.top,this.edges.bottom),diameter:this.settings.DefaultCircleDiameter});break;case"Wall":switch(this.settings.BiasTowards){case"Top":e=this.createHorizontalClusterWall(this.edges.top);break;case"Bottom":e=this.createHorizontalClusterWall(this.edges.bottom);break;case"Left":e=this.createVerticalClusterWall(this.edges.left);break;case"Right":e=this.createVerticalClusterWall(this.edges.right);break;case"Edges":e=(e=(e=(e=e.concat(this.createHorizontalClusterWall(this.edges.top))).concat(this.createHorizontalClusterWall(this.edges.bottom))).concat(this.createVerticalClusterWall(this.edges.left))).concat(this.createVerticalClusterWall(this.edges.right));break;case"Equator":e=e.concat(this.createHorizontalClusterWall(window.innerHeight/2));break;case"Meridian":e=e.concat(this.createVerticalClusterWall(window.innerWidth/2))}}this.createClusterFromParams(e)}createHorizontalClusterWall(t){let e=[],s=this.useFrame?900:window.innerWidth;for(let i=0;i<=s/this.settings.CircleDiameter;i++)e.push({x:this.edges.left+i*this.settings.CircleDiameter,y:t,diameter:this.settings.CircleDiameter});return e}createVerticalClusterWall(t){let e=[],s=this.useFrame?900:window.innerHeight;for(let i=0;i<=s/this.settings.CircleDiameter;i++)e.push({x:t,y:this.edges.top+i*this.settings.CircleDiameter,diameter:this.settings.CircleDiameter});return e}createClusterFromParams(t){if(t.length>0)for(let e of t)e.stuck=!0,this.createParticle(e)}createShapesFromPaths(t){if(t.hasOwnProperty("points")||0!=t.length)for(let e of t)if(e.solid){let t=this.system.createPolygon(e.x,e.y,e.points);t.solid=e.solid,t.closed=e.closed,this.shapes.push(t)}else for(let t=1;t<e.points.length;t++){let s=this.system.createPolygon(e.x,e.y,[[e.points[t-1][0],e.points[t-1][1]],[e.points[t][0],e.points[t][1]]]);s.solid=!1,s.closed=!1,this.shapes.push(s)}else console.error("Unable to create shapes. Paths must have an array of points [[x,y],...]")}removeAll(){for(let t of this.bodies)this.system.remove(t);for(let t of this.shapes)this.system.remove(t);this.bodies=[],this.shapes=[],this.numWalkers=0}togglePause(){this.paused=!this.paused}toggleShowWalkers(){this.showWalkers=!this.showWalkers}toggleShowClusters(){this.showClusters=!this.showClusters}toggleUseFrame(){this.useFrame=!this.useFrame,this.resetEdges()}pause(){this.paused=!0}unpause(){this.paused=!1}}},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" viewBox="0 0 900 900" version="1.1" id="svg8" sodipodi:docname="dla.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 360.0972,430.72214 356.96812,456.71 347.58087,479.86521 333.41765,498.96906 315.96066,513.06641 300.90813,520.44447 284.47221,525.18747 265.76359,527.75662 243.89295,528.61302 H 209.30835 174.72376 V 430.52451 332.43599 H 210.29649 245.86922 L 268.20099,333.45707 287.23898,336.52027 303.24671,341.32917 316.48767,347.85084 334.60341,362.40932 348.37137,381.31556 357.16575,404.14142 360.0972,430.72214" id="path820"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 307.79212,430.32687 306.01348,412.37583 300.67756,397.25741 291.61969,384.93871 278.41167,375.65026 270.53956,372.4553 262.46982,370.512 252.35794,369.42506 238.09592,369.06274 H 231.706 225.31609 V 430.45864 491.8545 H 231.706 238.09592 L 253.74133,491.45923 264.57783,490.27351 272.91108,487.90199 281.04669,484.21298 293.03602,474.99044 301.33632,463.13284 306.17817,448.27792 307.79212,430.32687" id="path819"></path><path inkscape:connector-curvature="0" id="path821" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 517.15385,528.61302 H 375.65347 V 332.43599 H 426.24576 V 490.66878 H 517.15385 V 528.61302" sodipodi:nodetypes="ccccccc"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 731.69898,528.61302 H 679.39389 L 665.82358,488.95599 H 593.09708 L 579.52676,528.61302 H 528.53917 L 601.00213,332.43599 H 659.23601 L 731.69898,528.61302" id="path824"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 653.57075,452.988 629.46033,382.63306 605.34994,452.988 H 653.57075" id="path823"></path></svg>'},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="polygons.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path id="path1377" style="opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" d="M 637.95718,464.22103 584.33571,382.14098 530.71423,300.06092 486.44216,387.53824 465.30384,429.30364 437.48882,430.45616 403.17529,384.77031 427.64471,365.18499 414.35188,278.03524 332.23363,245.97365 263.40556,301.05921 276.69889,388.20739 358.81822,420.27107 362.71416,417.15172 354.63937,446.02414 264.54156,476.88822 343.8441,529.62956 345.35592,624.85561 420.02002,565.73219 511.05425,593.72124 477.89678,504.44013 500.8419,471.77963 540.06207,469.61781 637.95718,464.22103" inkscape:connector-curvature="0" sodipodi:nodetypes="cccccccccccccccccccccccc"></path></svg>'},function(t,e,s){"use strict";s.r(e);var i={CircleDiameter:4,MaxWalkers:4e3,ShowWalkers:!1,BiasTowards:"Center",WalkerSource:"Edges",EdgeMargin:200},r=s(0),n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s])};function a(t,e){function s(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}function o(t,e){var s=t[0],i=t[1];return[s*Math.cos(e)-i*Math.sin(e),s*Math.sin(e)+i*Math.cos(e)]}function h(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var s=0;s<t.length;s++)if("number"!=typeof t[s])throw new Error("assertNumbers arguments["+s+"] is not a number. "+typeof t[s]+" == typeof "+t[s]);return!0}var l=Math.PI;function c(t,e,s){t.lArcFlag=0===t.lArcFlag?0:1,t.sweepFlag=0===t.sweepFlag?0:1;var i=t.rX,r=t.rY,n=t.x,a=t.y;i=Math.abs(t.rX),r=Math.abs(t.rY);var h=o([(e-n)/2,(s-a)/2],-t.xRot/180*l),c=h[0],_=h[1],u=Math.pow(c,2)/Math.pow(i,2)+Math.pow(_,2)/Math.pow(r,2);1<u&&(i*=Math.sqrt(u),r*=Math.sqrt(u)),t.rX=i,t.rY=r;var p=Math.pow(i,2)*Math.pow(_,2)+Math.pow(r,2)*Math.pow(c,2),m=(t.lArcFlag!==t.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(i,2)*Math.pow(r,2)-p)/p)),d=i*_/r*m,y=-r*c/i*m,f=o([d,y],t.xRot/180*l);t.cX=f[0]+(e+n)/2,t.cY=f[1]+(s+a)/2,t.phi1=Math.atan2((_-y)/r,(c-d)/i),t.phi2=Math.atan2((-_-y)/r,(-c-d)/i),0===t.sweepFlag&&t.phi2>t.phi1&&(t.phi2-=2*l),1===t.sweepFlag&&t.phi2<t.phi1&&(t.phi2+=2*l),t.phi1*=180/l,t.phi2*=180/l}function _(t,e,s){h(t,e,s);var i=t*t+e*e-s*s;if(0>i)return[];if(0===i)return[[t*s/(t*t+e*e),e*s/(t*t+e*e)]];var r=Math.sqrt(i);return[[(t*s+e*r)/(t*t+e*e),(e*s-t*r)/(t*t+e*e)],[(t*s-e*r)/(t*t+e*e),(e*s+t*r)/(t*t+e*e)]]}var u,p=Math.PI/180;function m(t,e,s){return(1-s)*t+s*e}function d(t,e,s,i){return t+Math.cos(i/180*l)*e+Math.sin(i/180*l)*s}function y(t,e,s,i){var r=e-t,n=s-e,a=3*r+3*(i-s)-6*n,o=6*(n-r),h=3*r;return Math.abs(a)<1e-6?[-h/o]:function(t,e,s){void 0===s&&(s=1e-6);var i=t*t/4-e;if(i<-s)return[];if(i<=s)return[-t/2];var r=Math.sqrt(i);return[-t/2-r,-t/2+r]}(o/a,h/a,1e-6)}function f(t,e,s,i,r){var n=1-r;return t*(n*n*n)+e*(3*n*n*r)+s*(3*n*r*r)+i*(r*r*r)}!function(t){function e(){return r(function(t,e,s){return t.relative&&(void 0!==t.x1&&(t.x1+=e),void 0!==t.y1&&(t.y1+=s),void 0!==t.x2&&(t.x2+=e),void 0!==t.y2&&(t.y2+=s),void 0!==t.x&&(t.x+=e),void 0!==t.y&&(t.y+=s),t.relative=!1),t})}function s(){var t=NaN,e=NaN,s=NaN,i=NaN;return r(function(r,n,a){return r.type&T.SMOOTH_CURVE_TO&&(r.type=T.CURVE_TO,t=isNaN(t)?n:t,e=isNaN(e)?a:e,r.x1=r.relative?n-t:2*n-t,r.y1=r.relative?a-e:2*a-e),r.type&T.CURVE_TO?(t=r.relative?n+r.x2:r.x2,e=r.relative?a+r.y2:r.y2):(t=NaN,e=NaN),r.type&T.SMOOTH_QUAD_TO&&(r.type=T.QUAD_TO,s=isNaN(s)?n:s,i=isNaN(i)?a:i,r.x1=r.relative?n-s:2*n-s,r.y1=r.relative?a-i:2*a-i),r.type&T.QUAD_TO?(s=r.relative?n+r.x1:r.x1,i=r.relative?a+r.y1:r.y1):(s=NaN,i=NaN),r})}function i(){var t=NaN,e=NaN;return r(function(s,i,r){if(s.type&T.SMOOTH_QUAD_TO&&(s.type=T.QUAD_TO,t=isNaN(t)?i:t,e=isNaN(e)?r:e,s.x1=s.relative?i-t:2*i-t,s.y1=s.relative?r-e:2*r-e),s.type&T.QUAD_TO){t=s.relative?i+s.x1:s.x1,e=s.relative?r+s.y1:s.y1;var n=s.x1,a=s.y1;s.type=T.CURVE_TO,s.x1=((s.relative?0:i)+2*n)/3,s.y1=((s.relative?0:r)+2*a)/3,s.x2=(s.x+2*n)/3,s.y2=(s.y+2*a)/3}else t=NaN,e=NaN;return s})}function r(t){var e=0,s=0,i=NaN,r=NaN;return function(n){if(isNaN(i)&&!(n.type&T.MOVE_TO))throw new Error("path must start with moveto");var a=t(n,e,s,i,r);return n.type&T.CLOSE_PATH&&(e=i,s=r),void 0!==n.x&&(e=n.relative?e+n.x:n.x),void 0!==n.y&&(s=n.relative?s+n.y:n.y),n.type&T.MOVE_TO&&(i=e,r=s),a}}function n(t,e,s,i,n,a){return h(t,e,s,i,n,a),r(function(r,o,h,l){var c=r.x1,_=r.x2,u=r.relative&&!isNaN(l),p=void 0!==r.x?r.x:u?0:o,m=void 0!==r.y?r.y:u?0:h;function d(t){return t*t}r.type&T.HORIZ_LINE_TO&&0!==e&&(r.type=T.LINE_TO,r.y=r.relative?0:h),r.type&T.VERT_LINE_TO&&0!==s&&(r.type=T.LINE_TO,r.x=r.relative?0:o),void 0!==r.x&&(r.x=r.x*t+m*s+(u?0:n)),void 0!==r.y&&(r.y=p*e+r.y*i+(u?0:a)),void 0!==r.x1&&(r.x1=r.x1*t+r.y1*s+(u?0:n)),void 0!==r.y1&&(r.y1=c*e+r.y1*i+(u?0:a)),void 0!==r.x2&&(r.x2=r.x2*t+r.y2*s+(u?0:n)),void 0!==r.y2&&(r.y2=_*e+r.y2*i+(u?0:a));var y=t*i-e*s;if(void 0!==r.xRot&&(1!==t||0!==e||0!==s||1!==i))if(0===y)delete r.rX,delete r.rY,delete r.xRot,delete r.lArcFlag,delete r.sweepFlag,r.type=T.LINE_TO;else{var f=r.xRot*Math.PI/180,g=Math.sin(f),v=Math.cos(f),x=1/d(r.rX),b=1/d(r.rY),O=d(v)*x+d(g)*b,w=2*g*v*(x-b),C=d(g)*x+d(v)*b,E=O*i*i-w*e*i+C*e*e,M=w*(t*i+e*s)-2*(O*s*i+C*t*e),N=O*s*s-w*t*s+C*t*t,A=(Math.atan2(M,E-N)+Math.PI)%Math.PI/2,k=Math.sin(A),R=Math.cos(A);r.rX=Math.abs(y)/Math.sqrt(E*d(R)+M*k*R+N*d(k)),r.rY=Math.abs(y)/Math.sqrt(E*d(k)-M*k*R+N*d(R)),r.xRot=180*A/Math.PI}return void 0!==r.sweepFlag&&0>y&&(r.sweepFlag=+!r.sweepFlag),r})}t.ROUND=function(t){function e(e){return Math.round(e*t)/t}return void 0===t&&(t=1e13),h(t),function(t){return void 0!==t.x1&&(t.x1=e(t.x1)),void 0!==t.y1&&(t.y1=e(t.y1)),void 0!==t.x2&&(t.x2=e(t.x2)),void 0!==t.y2&&(t.y2=e(t.y2)),void 0!==t.x&&(t.x=e(t.x)),void 0!==t.y&&(t.y=e(t.y)),t}},t.TO_ABS=e,t.TO_REL=function(){return r(function(t,e,s){return t.relative||(void 0!==t.x1&&(t.x1-=e),void 0!==t.y1&&(t.y1-=s),void 0!==t.x2&&(t.x2-=e),void 0!==t.y2&&(t.y2-=s),void 0!==t.x&&(t.x-=e),void 0!==t.y&&(t.y-=s),t.relative=!0),t})},t.NORMALIZE_HVZ=function(t,e,s){return void 0===t&&(t=!0),void 0===e&&(e=!0),void 0===s&&(s=!0),r(function(i,r,n,a,o){if(isNaN(a)&&!(i.type&T.MOVE_TO))throw new Error("path must start with moveto");return e&&i.type&T.HORIZ_LINE_TO&&(i.type=T.LINE_TO,i.y=i.relative?0:n),s&&i.type&T.VERT_LINE_TO&&(i.type=T.LINE_TO,i.x=i.relative?0:r),t&&i.type&T.CLOSE_PATH&&(i.type=T.LINE_TO,i.x=i.relative?a-r:a,i.y=i.relative?o-n:o),i.type&T.ARC&&(0===i.rX||0===i.rY)&&(i.type=T.LINE_TO,delete i.rX,delete i.rY,delete i.xRot,delete i.lArcFlag,delete i.sweepFlag),i})},t.NORMALIZE_ST=s,t.QT_TO_C=i,t.INFO=r,t.SANITIZE=function(t){void 0===t&&(t=0),h(t);var e=NaN,s=NaN,i=NaN,n=NaN;return r(function(r,a,o,h,l){var c=Math.abs,_=!1,u=0,p=0;if(r.type&T.SMOOTH_CURVE_TO&&(u=isNaN(e)?0:a-e,p=isNaN(s)?0:o-s),r.type&(T.CURVE_TO|T.SMOOTH_CURVE_TO)?(e=r.relative?a+r.x2:r.x2,s=r.relative?o+r.y2:r.y2):(e=NaN,s=NaN),r.type&T.SMOOTH_QUAD_TO?(i=isNaN(i)?a:2*a-i,n=isNaN(n)?o:2*o-n):r.type&T.QUAD_TO?(i=r.relative?a+r.x1:r.x1,n=r.relative?o+r.y1:r.y2):(i=NaN,n=NaN),r.type&T.LINE_COMMANDS||r.type&T.ARC&&(0===r.rX||0===r.rY||!r.lArcFlag)||r.type&T.CURVE_TO||r.type&T.SMOOTH_CURVE_TO||r.type&T.QUAD_TO||r.type&T.SMOOTH_QUAD_TO){var m=void 0===r.x?0:r.relative?r.x:r.x-a,d=void 0===r.y?0:r.relative?r.y:r.y-o;u=isNaN(i)?void 0===r.x1?u:r.relative?r.x:r.x1-a:i-a,p=isNaN(n)?void 0===r.y1?p:r.relative?r.y:r.y1-o:n-o;var y=void 0===r.x2?0:r.relative?r.x:r.x2-a,f=void 0===r.y2?0:r.relative?r.y:r.y2-o;c(m)<=t&&c(d)<=t&&c(u)<=t&&c(p)<=t&&c(y)<=t&&c(f)<=t&&(_=!0)}return r.type&T.CLOSE_PATH&&c(a-h)<=t&&c(o-l)<=t&&(_=!0),_?[]:r})},t.MATRIX=n,t.ROTATE=function(t,e,s){void 0===e&&(e=0),void 0===s&&(s=0),h(t,e,s);var i=Math.sin(t),r=Math.cos(t);return n(r,i,-i,r,e-e*r+s*i,s-e*i-s*r)},t.TRANSLATE=function(t,e){return void 0===e&&(e=0),h(t,e),n(1,0,0,1,t,e)},t.SCALE=function(t,e){return void 0===e&&(e=t),h(t,e),n(t,0,0,e,0,0)},t.SKEW_X=function(t){return h(t),n(1,0,Math.atan(t),1,0,0)},t.SKEW_Y=function(t){return h(t),n(1,Math.atan(t),0,1,0,0)},t.X_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),h(t),n(-1,0,0,1,t,0)},t.Y_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),h(t),n(1,0,0,-1,0,t)},t.A_TO_C=function(){return r(function(t,e,s){return T.ARC===t.type?function(t,e,s){var i,r,n,a;t.cX||c(t,e,s);for(var h=Math.min(t.phi1,t.phi2),l=Math.max(t.phi1,t.phi2)-h,_=Math.ceil(l/90),u=new Array(_),d=e,y=s,f=0;f<_;f++){var g=m(t.phi1,t.phi2,f/_),v=m(t.phi1,t.phi2,(f+1)/_),x=v-g,b=4/3*Math.tan(x*p/4),O=[Math.cos(g*p)-b*Math.sin(g*p),Math.sin(g*p)+b*Math.cos(g*p)],w=O[0],C=O[1],E=[Math.cos(v*p),Math.sin(v*p)],M=E[0],N=E[1],A=[M+b*Math.sin(v*p),N-b*Math.cos(v*p)],k=A[0],R=A[1];u[f]={relative:t.relative,type:T.CURVE_TO};var S=function(e,s){var i=o([e*t.rX,s*t.rY],t.xRot),r=i[0],n=i[1];return[t.cX+r,t.cY+n]};i=S(w,C),u[f].x1=i[0],u[f].y1=i[1],r=S(k,R),u[f].x2=r[0],u[f].y2=r[1],n=S(M,N),u[f].x=n[0],u[f].y=n[1],t.relative&&(u[f].x1-=d,u[f].y1-=y,u[f].x2-=d,u[f].y2-=y,u[f].x-=d,u[f].y-=y),d=(a=[u[f].x,u[f].y])[0],y=a[1]}return u}(t,t.relative?0:e,t.relative?0:s):t})},t.ANNOTATE_ARCS=function(){return r(function(t,e,s){return t.relative&&(e=0,s=0),T.ARC===t.type&&c(t,e,s),t})},t.CLONE=function(){return function(t){var e={};for(var s in t)e[s]=t[s];return e}},t.CALCULATE_BOUNDS=function(){var t=e(),n=i(),a=s(),o=r(function(e,s,i){var r=a(n(t(function(t){var e={};for(var s in t)e[s]=t[s];return e}(e))));function h(t){t>o.maxX&&(o.maxX=t),t<o.minX&&(o.minX=t)}function l(t){t>o.maxY&&(o.maxY=t),t<o.minY&&(o.minY=t)}if(r.type&T.DRAWING_COMMANDS&&(h(s),l(i)),r.type&T.HORIZ_LINE_TO&&h(r.x),r.type&T.VERT_LINE_TO&&l(r.y),r.type&T.LINE_TO&&(h(r.x),l(r.y)),r.type&T.CURVE_TO){h(r.x),l(r.y);for(var u=0,p=y(s,r.x1,r.x2,r.x);u<p.length;u++)0<(H=p[u])&&1>H&&h(f(s,r.x1,r.x2,r.x,H));for(var m=0,g=y(i,r.y1,r.y2,r.y);m<g.length;m++)0<(H=g[m])&&1>H&&l(f(i,r.y1,r.y2,r.y,H))}if(r.type&T.ARC){h(r.x),l(r.y),c(r,s,i);for(var v=r.xRot/180*Math.PI,x=Math.cos(v)*r.rX,b=Math.sin(v)*r.rX,O=-Math.sin(v)*r.rY,w=Math.cos(v)*r.rY,C=r.phi1<r.phi2?[r.phi1,r.phi2]:-180>r.phi2?[r.phi2+360,r.phi1+360]:[r.phi2,r.phi1],E=C[0],M=C[1],N=function(t){var e=t[0],s=t[1],i=180*Math.atan2(s,e)/Math.PI;return i<E?i+360:i},A=0,k=_(O,-x,0).map(N);A<k.length;A++)(H=k[A])>E&&H<M&&h(d(r.cX,x,O,H));for(var R=0,S=_(w,-b,0).map(N);R<S.length;R++){var H;(H=S[R])>E&&H<M&&l(d(r.cY,b,w,H))}}return e});return o.minX=1/0,o.maxX=-1/0,o.minY=1/0,o.maxY=-1/0,o}}(u||(u={}));var g,v,x=function(){function t(){}return t.prototype.round=function(t){return this.transform(u.ROUND(t))},t.prototype.toAbs=function(){return this.transform(u.TO_ABS())},t.prototype.toRel=function(){return this.transform(u.TO_REL())},t.prototype.normalizeHVZ=function(t,e,s){return this.transform(u.NORMALIZE_HVZ(t,e,s))},t.prototype.normalizeST=function(){return this.transform(u.NORMALIZE_ST())},t.prototype.qtToC=function(){return this.transform(u.QT_TO_C())},t.prototype.aToC=function(){return this.transform(u.A_TO_C())},t.prototype.sanitize=function(t){return this.transform(u.SANITIZE(t))},t.prototype.translate=function(t,e){return this.transform(u.TRANSLATE(t,e))},t.prototype.scale=function(t,e){return this.transform(u.SCALE(t,e))},t.prototype.rotate=function(t,e,s){return this.transform(u.ROTATE(t,e,s))},t.prototype.matrix=function(t,e,s,i,r,n){return this.transform(u.MATRIX(t,e,s,i,r,n))},t.prototype.skewX=function(t){return this.transform(u.SKEW_X(t))},t.prototype.skewY=function(t){return this.transform(u.SKEW_Y(t))},t.prototype.xSymmetry=function(t){return this.transform(u.X_AXIS_SYMMETRY(t))},t.prototype.ySymmetry=function(t){return this.transform(u.Y_AXIS_SYMMETRY(t))},t.prototype.annotateArcs=function(){return this.transform(u.ANNOTATE_ARCS())},t}(),b=function(t){return" "===t||"\t"===t||"\r"===t||"\n"===t},O=function(t){return"0".charCodeAt(0)<=t.charCodeAt(0)&&t.charCodeAt(0)<="9".charCodeAt(0)},w=function(t){function e(){var e=t.call(this)||this;return e.curNumber="",e.curCommandType=-1,e.curCommandRelative=!1,e.canParseCommandOrComma=!0,e.curNumberHasExp=!1,e.curNumberHasExpDigits=!1,e.curNumberHasDecimal=!1,e.curArgs=[],e}return a(e,t),e.prototype.finish=function(t){if(void 0===t&&(t=[]),this.parse(" ",t),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError("Unterminated command at the path end.");return t},e.prototype.parse=function(t,e){var s=this;void 0===e&&(e=[]);for(var i=function(t){e.push(t),s.curArgs.length=0,s.canParseCommandOrComma=!0},r=0;r<t.length;r++){var n=t[r];if(O(n))this.curNumber+=n,this.curNumberHasExpDigits=this.curNumberHasExp;else if("e"!==n&&"E"!==n)if("-"!==n&&"+"!==n||!this.curNumberHasExp||this.curNumberHasExpDigits)if("."!==n||this.curNumberHasExp||this.curNumberHasDecimal){if(this.curNumber&&-1!==this.curCommandType){var a=Number(this.curNumber);if(isNaN(a))throw new SyntaxError("Invalid number ending at "+r);if(this.curCommandType===T.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>a)throw new SyntaxError('Expected positive number, got "'+a+'" at index "'+r+'"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&"0"!==this.curNumber&&"1"!==this.curNumber)throw new SyntaxError('Expected a flag, got "'+this.curNumber+'" at index "'+r+'"');this.curArgs.push(a),this.curArgs.length===C[this.curCommandType]&&(T.HORIZ_LINE_TO===this.curCommandType?i({type:T.HORIZ_LINE_TO,relative:this.curCommandRelative,x:a}):T.VERT_LINE_TO===this.curCommandType?i({type:T.VERT_LINE_TO,relative:this.curCommandRelative,y:a}):this.curCommandType===T.MOVE_TO||this.curCommandType===T.LINE_TO||this.curCommandType===T.SMOOTH_QUAD_TO?(i({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),T.MOVE_TO===this.curCommandType&&(this.curCommandType=T.LINE_TO)):this.curCommandType===T.CURVE_TO?i({type:T.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===T.SMOOTH_CURVE_TO?i({type:T.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===T.QUAD_TO?i({type:T.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===T.ARC&&i({type:T.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber="",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!b(n))if(","===n&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if("+"!==n&&"-"!==n&&"."!==n){if(0!==this.curArgs.length)throw new SyntaxError("Unterminated command at index "+r+".");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character "'+n+'" at index '+r+". Command cannot follow comma");if(this.canParseCommandOrComma=!1,"z"!==n&&"Z"!==n)if("h"===n||"H"===n)this.curCommandType=T.HORIZ_LINE_TO,this.curCommandRelative="h"===n;else if("v"===n||"V"===n)this.curCommandType=T.VERT_LINE_TO,this.curCommandRelative="v"===n;else if("m"===n||"M"===n)this.curCommandType=T.MOVE_TO,this.curCommandRelative="m"===n;else if("l"===n||"L"===n)this.curCommandType=T.LINE_TO,this.curCommandRelative="l"===n;else if("c"===n||"C"===n)this.curCommandType=T.CURVE_TO,this.curCommandRelative="c"===n;else if("s"===n||"S"===n)this.curCommandType=T.SMOOTH_CURVE_TO,this.curCommandRelative="s"===n;else if("q"===n||"Q"===n)this.curCommandType=T.QUAD_TO,this.curCommandRelative="q"===n;else if("t"===n||"T"===n)this.curCommandType=T.SMOOTH_QUAD_TO,this.curCommandRelative="t"===n;else{if("a"!==n&&"A"!==n)throw new SyntaxError('Unexpected character "'+n+'" at index '+r+".");this.curCommandType=T.ARC,this.curCommandRelative="a"===n}else e.push({type:T.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=n,this.curNumberHasDecimal="."===n}else this.curNumber+=n,this.curNumberHasDecimal=!0;else this.curNumber+=n;else this.curNumber+=n,this.curNumberHasExp=!0}return e},e.prototype.transform=function(t){return Object.create(this,{parse:{value:function(e,s){void 0===s&&(s=[]);for(var i=0,r=Object.getPrototypeOf(this).parse.call(this,e);i<r.length;i++){var n=r[i],a=t(n);Array.isArray(a)?s.push.apply(s,a):s.push(a)}return s}}})},e}(x),T=function(t){function e(s){var i=t.call(this)||this;return i.commands="string"==typeof s?e.parse(s):s,i}return a(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=u.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],s=0,i=this.commands;s<i.length;s++){var r=t(i[s]);Array.isArray(r)?e.push.apply(e,r):e.push(r)}return this.commands=e,this},e.encode=function(t){return M(t)},e.parse=function(t){var e=new w,s=[];return e.parse(t,s),e.finish(s),s},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(x),C=((g={})[T.MOVE_TO]=2,g[T.LINE_TO]=2,g[T.HORIZ_LINE_TO]=1,g[T.VERT_LINE_TO]=1,g[T.CLOSE_PATH]=0,g[T.QUAD_TO]=4,g[T.SMOOTH_QUAD_TO]=2,g[T.CURVE_TO]=6,g[T.SMOOTH_CURVE_TO]=4,g[T.ARC]=7,g),E=" ";function M(t){var e="";Array.isArray(t)||(t=[t]);for(var s=0;s<t.length;s++){var i=t[s];if(i.type===T.CLOSE_PATH)e+="z";else if(i.type===T.HORIZ_LINE_TO)e+=(i.relative?"h":"H")+i.x;else if(i.type===T.VERT_LINE_TO)e+=(i.relative?"v":"V")+i.y;else if(i.type===T.MOVE_TO)e+=(i.relative?"m":"M")+i.x+E+i.y;else if(i.type===T.LINE_TO)e+=(i.relative?"l":"L")+i.x+E+i.y;else if(i.type===T.CURVE_TO)e+=(i.relative?"c":"C")+i.x1+E+i.y1+E+i.x2+E+i.y2+E+i.x+E+i.y;else if(i.type===T.SMOOTH_CURVE_TO)e+=(i.relative?"s":"S")+i.x2+E+i.y2+E+i.x+E+i.y;else if(i.type===T.QUAD_TO)e+=(i.relative?"q":"Q")+i.x1+E+i.y1+E+i.x+E+i.y;else if(i.type===T.SMOOTH_QUAD_TO)e+=(i.relative?"t":"T")+i.x+E+i.y;else{if(i.type!==T.ARC)throw new Error('Unexpected command type "'+i.type+'" at index '+s+".");e+=(i.relative?"a":"A")+i.rX+E+i.rY+E+i.xRot+E+ +i.lArcFlag+E+ +i.sweepFlag+E+i.x+E+i.y}}return e}var N=function(t){function e(s){var i=t.call(this)||this;return i.commands="string"==typeof s?e.parse(s):s,i}return a(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=u.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],s=0,i=this.commands;s<i.length;s++){var r=t(i[s]);Array.isArray(r)?e.push.apply(e,r):e.push(r)}return this.commands=e,this},e.encode=function(t){return M(t)},e.parse=function(t){var e=new w,s=[];return e.parse(t,s),e.finish(s),s},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(x);(v={})[N.MOVE_TO]=2,v[N.LINE_TO]=2,v[N.HORIZ_LINE_TO]=1,v[N.VERT_LINE_TO]=1,v[N.CLOSE_PATH]=0,v[N.QUAD_TO]=4,v[N.SMOOTH_QUAD_TO]=2,v[N.CURVE_TO]=6,v[N.SMOOTH_CURVE_TO]=4,v[N.ARC]=7;class A{constructor(){}static loadFromFileContents(t){let e=(new DOMParser).parseFromString(t,"image/svg+xml");return this.load(e)}static load(t){let e=t.querySelectorAll("path"),s={},i=[];s.points=[];for(let t of e){let e=new N(t.getAttribute("d")),r={x:0,y:0};for(let[t,n]of e.commands.entries()){switch(n.type){case N.MOVE_TO:case N.LINE_TO:s.points.push([n.x,n.y]);break;case N.HORIZ_LINE_TO:s.points.push([n.x,r.y]);break;case N.VERT_LINE_TO:s.points.push([r.x,n.y]);break;case N.CLOSE_PATH:s.closed=!0,i.push(s),(s={}).points=[]}if(t==e.commands.length-1&&n.type!=N.CLOSE_PATH){let t=s.points[0],e=s.points[s.points.length-1];Math.hypot(e.x-t.x,e.y-t.y)<.1?s.closed=!0:s.closed=!1,i.push(s),(s={}).points=[]}n.hasOwnProperty("x")&&(r.x=n.x),n.hasOwnProperty("y")&&(r.y=n.y)}}for(let t of i){t.x=t.points[0][0],t.y=t.points[0][1],t.points.push([t.x,t.y]);for(let e of t.points)e[0]-=t.x,e[1]-=t.y}return i}}let k,R={dla:s(1),polygons:s(2)},S=R.polygons;new p5(function(t){function e(){k.removeAll(),s(S),k.createDefaultWalkers()}function s(t){let e=A.loadFromFileContents(t);for(let t of e)t.stuck=!0,t.solid=!1,t.x+=window.innerWidth/2-450,t.y+=window.innerHeight/2-450;k.createShapesFromPaths(e)}t.setup=function(){t.createCanvas(window.innerWidth,window.innerHeight),t.colorMode(t.HSB,255),t.ellipseMode(t.CENTER),(k=new r.a(t,i)).createDefaultWalkers(),s(S)},t.draw=function(){k.iterate(),k.draw()},t.keyReleased=function(){switch(t.key){case" ":k.togglePause();break;case"w":k.toggleShowWalkers();break;case"c":k.toggleShowClusters();break;case"r":e();break;case"f":k.toggleUseFrame(),e();break;case"1":S=R.dla,e();break;case"2":S=R.polygons,e()}}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,